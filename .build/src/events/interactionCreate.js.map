{"version":3,"file":"interactionCreate.js","sources":["src/events/interactionCreate.ts"],"sourceRoot":"/","sourcesContent":["import { appCommands } from \"../handlers/interactionCommandHandler\";\r\nimport { Event } from \"../types/Event\";\r\nimport {\r\n  AutocompleteInteraction,\r\n  Interaction,\r\n  Client,\r\n  MessageFlags,\r\n} from \"discord.js\";\r\nimport {\r\n  commandErrors,\r\n  commandsRun,\r\n  interactionErrors,\r\n  interactionsRun,\r\n} from \"../metricsServer\";\r\nimport {\r\n  buttonHandlers,\r\n  modalHandlers,\r\n  selectMenuHandlers,\r\n} from \"../handlers/interactionHandlers\";\r\nimport { onError } from \"../utils/onError\";\r\nimport { t } from \"../lang\";\r\nimport { EventData } from \"../handlers/eventHandler\";\r\nimport { viewAnnouncement } from \"../utils/bot/viewAnnouncement\";\r\nimport logger from \"../utils/logger\";\r\n\r\nconst event: Event<\"interactionCreate\"> = {\r\n  name: \"interactionCreate\",\r\n  once: false,\r\n  async execute(client: Client, data, interaction: Interaction) {\r\n    if (interaction.guildId && data?.blacklist?.active) {\r\n      // We know the user is blacklisted, im gonna just use en as locale as this is per-user not server\r\n      if (!interaction.isAutocomplete()) {\r\n        interaction.reply(\r\n          (\r\n            await onError(\r\n              new Error(\r\n                t(\r\n                  // (\r\n                  //   await getServer(interaction.guildId)\r\n                  // ).preferredLanguage,\r\n                  \"en\",\r\n                  `BLACKLISTED_${\r\n                    data.blacklist.type === \"user\" ? \"USER\" : \"SERVER\"\r\n                  }`,\r\n                  {\r\n                    reason: data.blacklist.reason,\r\n                  }\r\n                )\r\n              )\r\n            )\r\n          ).discordMsg\r\n        );\r\n        return;\r\n      } else\r\n        return interaction.respond([\r\n          {\r\n            name: t(\r\n              // (\r\n              //   await getServer(interaction.guildId)\r\n              // ).preferredLanguage,\r\n              \"en\",\r\n              `BLACKLISTED_${\r\n                data.blacklist.type === \"user\" ? \"USER\" : \"SERVER\"\r\n              }`,\r\n              {\r\n                reason: data.blacklist.reason,\r\n              }\r\n            ).slice(0, 100),\r\n            value: \"-\",\r\n          },\r\n        ]);\r\n    }\r\n\r\n    if (\r\n      interaction.isChatInputCommand() ||\r\n      interaction.isUserContextMenuCommand() ||\r\n      interaction.isMessageContextMenuCommand()\r\n    ) {\r\n      const command = appCommands.get(interaction.commandName);\r\n      if (!command) return;\r\n\r\n      commandsRun.inc({\r\n        command: interaction.commandName,\r\n        type: interaction.isChatInputCommand()\r\n          ? \"Chat Input\"\r\n          : interaction.isUserContextMenuCommand()\r\n          ? \"User Context\"\r\n          : \"Message Context\",\r\n      });\r\n\r\n      try {\r\n        await command.execute(\r\n          client as Client,\r\n          data as EventData,\r\n          interaction as any\r\n        );\r\n\r\n        // After successful execution, check for announcement\r\n        setTimeout(async () => {\r\n          const announcement = await viewAnnouncement(interaction.user.id);\r\n          if (announcement) {\r\n            await interaction\r\n              .followUp({\r\n                ...announcement,\r\n                flags: [MessageFlags.Ephemeral],\r\n              })\r\n              .catch((err) => {\r\n                logger.warn(`Error when showing announcement`, err);\r\n              });\r\n          }\r\n        }, 3000);\r\n      } catch (err: any) {\r\n        logger.error(`Error executing /${interaction.commandName}`, err);\r\n        commandErrors.inc({\r\n          command: interaction.commandName,\r\n          type: interaction.isChatInputCommand()\r\n            ? \"Chat Input\"\r\n            : interaction.isUserContextMenuCommand()\r\n            ? \"User Context\"\r\n            : \"Message Context\",\r\n        });\r\n        const replyMethod =\r\n          interaction.replied || interaction.deferred ? \"followUp\" : \"reply\";\r\n        await interaction[replyMethod](\r\n          (\r\n            await onError(err, {\r\n              command: interaction.commandName,\r\n              user: interaction.user.id,\r\n              server: interaction.guild?.id || \"DMs\",\r\n              stack: err.stack,\r\n            })\r\n          ).discordMsg\r\n        ).catch(() => {});\r\n      }\r\n    }\r\n\r\n    if (interaction.isButton()) {\r\n      const customId = interaction.customId.split(\":\")[0];\r\n      const handler = buttonHandlers.get(customId);\r\n      if (handler) {\r\n        interactionsRun.inc({ name: customId, type: \"Button\" });\r\n        try {\r\n          await handler.execute(client, data as EventData, interaction);\r\n        } catch (err: any) {\r\n          logger.error(`Error in button ${interaction.customId}`, err);\r\n          interactionErrors.inc({ name: customId, type: \"Button\" });\r\n\r\n          const replyMethod =\r\n            interaction.replied || interaction.deferred ? \"followUp\" : \"reply\";\r\n          await interaction[replyMethod](\r\n            (\r\n              await onError(err, {\r\n                button: customId,\r\n                fullId: interaction.customId,\r\n                user: interaction.user.id,\r\n                server: interaction.guild?.id || \"DMs\",\r\n                stack: err.stack,\r\n              })\r\n            ).discordMsg\r\n          ).catch(() => {});\r\n        }\r\n      }\r\n    }\r\n\r\n    if (interaction.isModalSubmit()) {\r\n      const customId = interaction.customId.split(\":\")[0];\r\n      const handler = modalHandlers.get(customId);\r\n      if (handler) {\r\n        interactionsRun.inc({ name: customId, type: \"Modal\" });\r\n        try {\r\n          await handler.execute(client, data as EventData, interaction);\r\n        } catch (err) {\r\n          logger.error(`Error in modal ${interaction.customId}`, err);\r\n          interactionErrors.inc({ name: customId, type: \"Modal\" });\r\n\r\n          const replyMethod =\r\n            interaction.replied || interaction.deferred ? \"followUp\" : \"reply\";\r\n          await interaction[replyMethod](\r\n            (\r\n              await onError(err, {\r\n                modal: customId,\r\n                fullId: interaction.customId,\r\n                user: interaction.user.id,\r\n                server: interaction.guild?.id || \"DMs\",\r\n                stack: (err as any).stack ?? \"Unknown\",\r\n              })\r\n            ).discordMsg\r\n          ).catch(() => {});\r\n        }\r\n      }\r\n    }\r\n\r\n    if (interaction.isAnySelectMenu()) {\r\n      const customId = interaction.customId.split(\":\")[0];\r\n      const handler = selectMenuHandlers.get(customId);\r\n      if (handler) {\r\n        interactionsRun.inc({ name: customId, type: \"Select Menu\" });\r\n        try {\r\n          await handler.execute(client, data as EventData, interaction);\r\n        } catch (err) {\r\n          logger.error(`Error in select menu ${interaction.customId}`, err);\r\n          interactionErrors.inc({ name: customId, type: \"Select Menu\" });\r\n\r\n          const replyMethod =\r\n            interaction.replied || interaction.deferred ? \"followUp\" : \"reply\";\r\n          await interaction[replyMethod](\r\n            (\r\n              await onError(err, {\r\n                menu: customId,\r\n                fullId: interaction.customId,\r\n                user: interaction.user.id,\r\n                server: interaction.guild?.id || \"DMs\",\r\n              })\r\n            ).discordMsg\r\n          ).catch(() => {});\r\n        }\r\n      }\r\n    }\r\n\r\n    if (interaction.isAutocomplete()) {\r\n      const command = appCommands.get(interaction.commandName);\r\n      if (command?.type === \"slash\" && command.autocomplete) {\r\n        try {\r\n          await command.autocomplete(\r\n            client as Client,\r\n            interaction as AutocompleteInteraction\r\n          );\r\n        } catch (err) {\r\n          logger.error(\r\n            `Error executing autocomplete ${interaction.commandName}`,\r\n            err\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\nexport default event;\r\n"],"names":[],"mappings":"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","debug_id":"4de0764a-6fd3-5778-a5a7-1cad6dad5c9d"}