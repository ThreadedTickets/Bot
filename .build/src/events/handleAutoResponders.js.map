{"version":3,"file":"handleAutoResponders.js","sources":["src/events/handleAutoResponders.ts"],"sourceRoot":"/","sourcesContent":["import { GuildMember } from \"discord.js\";\nimport { Event } from \"../types/Event\";\nimport {\n  findMatchingResponder,\n  getServer,\n  getServerMessage,\n  getServerResponders,\n} from \"../utils/bot/getServer\";\nimport serverMessageToDiscordMessage from \"../utils/formatters/serverMessageToDiscordMessage\";\nimport { generateBasePlaceholderContext } from \"../utils/message/placeholders/generateBaseContext\";\nimport { resolveDiscordMessagePlaceholders } from \"../utils/message/placeholders/resolvePlaceholders\";\nimport { TicketChannelManager } from \"../utils/bot/TicketChannelManager\";\n\nconst userCooldowns = new Map<string, number>();\nconst COOLDOWN_TIME = 10 * 1000;\n\nconst event: Event<\"messageCreate\"> = {\n  name: \"messageCreate\",\n  once: false,\n  async execute(client, data, message) {\n    if (message.author.bot || !message.guildId || message.content.length < 7)\n      return;\n    if (data?.blacklist?.active) return;\n    const server = await getServer(message.guildId);\n    const { extraAllowedChannels } = server.settings.autoResponders!;\n    const isTicketChannel = await new TicketChannelManager().getTicket(\n      message.channelId\n    );\n\n    if (\n      !extraAllowedChannels.includes(message.channel.id) &&\n      !isTicketChannel?.allowAutoresponders\n    )\n      return;\n\n    const userId = message.author.id;\n    if (userCooldowns.has(userId)) return;\n\n    const responders = await getServerResponders(message.guildId, true);\n    if (!responders.length) return;\n\n    const matchedResponder = findMatchingResponder(message.content, responders);\n    if (!matchedResponder) return;\n\n    const reply = await getServerMessage(\n      matchedResponder.message,\n      message.guildId\n    );\n    if (!reply) return;\n\n    userCooldowns.set(userId, new Date().getTime());\n    setTimeout(() => userCooldowns.delete(userId), COOLDOWN_TIME);\n\n    message.reply(\n      resolveDiscordMessagePlaceholders(\n        serverMessageToDiscordMessage(reply),\n        generateBasePlaceholderContext({\n          server: message.guild!,\n          channel: message.channel,\n          member: message.member as GuildMember,\n          user: message.author,\n        })\n      )\n    );\n  },\n};\n\nexport default event;\n"],"names":[],"mappings":";;;;;;;AAEA,sDAKgC;AAChC,sHAA8F;AAC9F,2FAAmG;AACnG,2FAAsG;AACtG,4EAAyE;AAEzE,MAAM,aAAa,GAAG,IAAI,GAAG,EAAkB,CAAC;AAChD,MAAM,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC;AAEhC,MAAM,KAAK,GAA2B;IACpC,IAAI,EAAE,eAAe;IACrB,IAAI,EAAE,KAAK;IACX,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO;QACjC,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;YACtE,OAAO;QACT,IAAI,IAAI,EAAE,SAAS,EAAE,MAAM;YAAE,OAAO;QACpC,MAAM,MAAM,GAAG,MAAM,IAAA,qBAAS,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAChD,MAAM,EAAE,oBAAoB,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAe,CAAC;QACjE,MAAM,eAAe,GAAG,MAAM,IAAI,2CAAoB,EAAE,CAAC,SAAS,CAChE,OAAO,CAAC,SAAS,CAClB,CAAC;QAEF,IACE,CAAC,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YAClD,CAAC,eAAe,EAAE,mBAAmB;YAErC,OAAO;QAET,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;QACjC,IAAI,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC;YAAE,OAAO;QAEtC,MAAM,UAAU,GAAG,MAAM,IAAA,+BAAmB,EAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,CAAC,MAAM;YAAE,OAAO;QAE/B,MAAM,gBAAgB,GAAG,IAAA,iCAAqB,EAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,gBAAgB;YAAE,OAAO;QAE9B,MAAM,KAAK,GAAG,MAAM,IAAA,4BAAgB,EAClC,gBAAgB,CAAC,OAAO,EACxB,OAAO,CAAC,OAAO,CAChB,CAAC;QACF,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QAChD,UAAU,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC;QAE9D,OAAO,CAAC,KAAK,CACX,IAAA,uDAAiC,EAC/B,IAAA,uCAA6B,EAAC,KAAK,CAAC,EACpC,IAAA,oDAA8B,EAAC;YAC7B,MAAM,EAAE,OAAO,CAAC,KAAM;YACtB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,MAAM,EAAE,OAAO,CAAC,MAAqB;YACrC,IAAI,EAAE,OAAO,CAAC,MAAM;SACrB,CAAC,CACH,CACF,CAAC;IACJ,CAAC;CACF,CAAC;AAEF,kBAAe,KAAK,CAAC","debug_id":"40eda5a4-3f31-5f9d-96a8-abb4ed41af6b"}