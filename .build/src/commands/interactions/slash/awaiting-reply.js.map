{"version":3,"file":"awaiting-reply.js","sources":["src/commands/interactions/slash/awaiting-reply.ts"],"sourceRoot":"/","sourcesContent":["import {\n  ActionRowBuilder,\n  ButtonBuilder,\n  ButtonStyle,\n  EmbedBuilder,\n  GuildMember,\n  InteractionContextType,\n  MessageFlags,\n  PermissionFlagsBits,\n  SlashCommandBuilder,\n} from \"discord.js\";\nimport { AppCommand } from \"../../../types/Command\";\nimport { t } from \"../../../lang\";\nimport { TicketChannelManager } from \"../../../utils/bot/TicketChannelManager\";\nimport { getServerGroupsByIds, getTicket } from \"../../../utils/bot/getServer\";\nimport { onError } from \"../../../utils/onError\";\nimport { getUserPermissions } from \"../../../utils/calculateUserPermissions\";\nimport { sendDirectMessage } from \"../../../utils/bot/sendDirectMessage\";\nimport colours from \"../../../constants/colours\";\nimport { parseDurationToMs } from \"../../../utils/formatters/duration\";\nimport { TaskScheduler } from \"../../..\";\nimport logger from \"../../../utils/logger\";\n\nconst command: AppCommand = {\n  type: \"slash\",\n  data: new SlashCommandBuilder()\n    .setName(\"awaiting-reply\")\n    .setDescription(\"A friendly reminder to a user to respond to a ticket\")\n    .setContexts(InteractionContextType.Guild)\n    .setNameLocalizations({})\n    .setDescriptionLocalizations({})\n    .addStringOption((o) =>\n      o\n        .setName(\"message\")\n        .setDescription(\"Attach a short message\")\n        .setMaxLength(250)\n    )\n    .addStringOption((o) =>\n      o\n        .setName(\"action\")\n        .setDescription(\"What action should be taken if there is no response?\")\n        .addChoices([\n          {\n            name: \"Close the ticket\",\n            value: \"close\",\n          },\n          {\n            name: \"Lock the ticket\",\n            value: \"lock\",\n          },\n          {\n            name: \"Nothing (Default)\",\n            value: \"nothing\",\n          },\n        ])\n    )\n    .addStringOption((o) =>\n      o\n        .setName(\"time\")\n        .setDescription(\"How long should the user have to respond?\")\n        .addChoices([\n          {\n            name: \"1 hour\",\n            value: \"1h\",\n          },\n          {\n            name: \"2 hours\",\n            value: \"2h\",\n          },\n          {\n            name: \"6 hours\",\n            value: \"6h\",\n          },\n          {\n            name: \"12 hours\",\n            value: \"12h\",\n          },\n          {\n            name: \"24 hours (Default)\",\n            value: \"24h\",\n          },\n          {\n            name: \"2 days\",\n            value: \"48h\",\n          },\n          {\n            name: \"3 days\",\n            value: \"72h\",\n          },\n        ])\n    )\n    .addStringOption((o) =>\n      o\n        .setName(\"notify\")\n        .setDescription(\"Do you want to be notified when the user responds?\")\n        .addChoices([\n          {\n            name: \"Yes (Default)\",\n            value: \"true\",\n          },\n          {\n            name: \"No\",\n            value: \"false\",\n          },\n        ])\n    ),\n\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    await interaction.reply({\n      content: t(data.lang!, \"THINK\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n\n    const ticketId = await new TicketChannelManager().getTicketId(\n      interaction.channelId\n    );\n    if (!ticketId)\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Ticket not found\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    if (await TaskScheduler.taskExists(`AWAIT-${ticketId}`))\n      return interaction.editReply({\n        content: t(data.lang!, \"TICKET_ALREADY_AWAITING\"),\n        components: [\n          new ActionRowBuilder<ButtonBuilder>().addComponents(\n            new ButtonBuilder()\n              .setCustomId(`cancelAwait:${ticketId}`)\n              .setLabel(t(data.lang!, \"CANCEL\"))\n              .setStyle(ButtonStyle.Danger)\n          ),\n        ],\n      });\n\n    const ticket = await getTicket(ticketId, interaction.guildId);\n    if (!ticket)\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Ticket not found\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    if (ticket.owner === interaction.user.id)\n      return interaction.editReply({\n        content: t(data.lang!, \"NO_ACTION_SELF\"),\n      });\n\n    if (ticket.status !== \"Open\")\n      return interaction.editReply({\n        content: t(data.lang!, \"TICKET_NOT_OPEN\"),\n      });\n\n    const userPermissions = getUserPermissions(\n      interaction.member as GuildMember,\n      await getServerGroupsByIds(ticket.groups, interaction.guildId)\n    );\n\n    const message = interaction.options.getString(\"message\");\n    const action: \"lock\" | \"nothing\" | \"close\" =\n      (interaction.options.getString(\"action\") as\n        | \"lock\"\n        | \"nothing\"\n        | \"close\") || \"nothing\";\n    const time = parseDurationToMs(\n      interaction.options.getString(\"time\") || \"24h\"\n    );\n    const futureTime = Math.round(\n      new Date().setMilliseconds(new Date().getMilliseconds() + time) / 1000\n    );\n    const notify = interaction.options.getString(\"notify\")\n      ? interaction.options.getString(\"notify\") === \"true\"\n        ? interaction.user.id\n        : null\n      : interaction.user.id;\n\n    if (\n      ((action === \"lock\" && !userPermissions.tickets.canLock) ||\n        (action === \"close\" && !userPermissions.tickets.canClose)) &&\n      !interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild)\n    )\n      return interaction.editReply(\n        (\n          await onError(new Error(`Missing ${action} permission`), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    const dm = await sendDirectMessage(client, ticket.owner, {\n      embeds: [\n        new EmbedBuilder()\n          .setColor(parseInt(colours.primary, 16))\n          .setDescription(\n            `Hey! The support team in **${\n              interaction.guild.name\n            }** have responded to [your ticket](${\n              interaction.channel.url\n            }) and require a reply.${\n              action !== \"nothing\"\n                ? `\\n-# If you do not respond <t:${futureTime}:R> then your ticket will be ${\n                    action === \"close\" ? \"closed\" : \"locked\"\n                  }.`\n                : \"\"\n            }`\n          )\n          .setFields(\n            message\n              ? [\n                  {\n                    name: \"Message from support team\",\n                    value: `\\`\\`\\`\\n${message}\\n\\`\\`\\``,\n                  },\n                ]\n              : []\n          ),\n      ],\n      components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n          new ButtonBuilder()\n            .setURL(interaction.channel.url)\n            .setStyle(ButtonStyle.Link)\n            .setLabel(\"Respond in ticket\")\n        ),\n      ],\n    });\n\n    const dmSent = dm !== null;\n    TaskScheduler.scheduleTask(\n      \"awaitingReply\",\n      { ticketId, action, notify, serverId: interaction.guildId },\n      time,\n      `AWAIT-${ticketId}`\n    );\n    logger.debug(`Scheduled await-reply task on ${ticketId}`);\n    const msg = {\n      content:\n        t(data.lang!, \"TICKET_AWAIT_REQUEST_DONE\", {\n          time: `<t:${futureTime}:R>`,\n          action:\n            action === \"close\"\n              ? \"closed\"\n              : action === \"lock\"\n              ? \"locked\"\n              : \"ignored\",\n        }) + (dmSent ? \"\" : t(data.lang!, \"UNABLE_TO_DM_TICKET_AWAIT\")),\n    };\n    interaction.editReply(msg);\n\n    interaction.channel.send({\n      ...msg,\n      components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n          new ButtonBuilder()\n            .setCustomId(`cancelAwait:${ticketId}`)\n            .setLabel(t(data.lang!, \"CANCEL\"))\n            .setStyle(ButtonStyle.Danger)\n        ),\n      ],\n    });\n  },\n};\n\nexport default command;\n"],"names":[],"mappings":"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","debug_id":"90a39b8b-d2a9-5fb9-b6f8-60437d70d06b"}