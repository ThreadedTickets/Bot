{"version":3,"file":"ticket.js","sources":["src/commands/interactions/slash/ticket.ts"],"sourceRoot":"/","sourcesContent":["import {\n  GuildMember,\n  InteractionContextType,\n  MessageFlags,\n  PermissionFlagsBits,\n  SlashCommandBuilder,\n  User,\n} from \"discord.js\";\nimport { AppCommand } from \"../../../types/Command\";\nimport {\n  getServerGroupsByIds,\n  getServerTicketTrigger,\n  getServerTicketTriggers,\n} from \"../../../utils/bot/getServer\";\nimport { onError } from \"../../../utils/onError\";\nimport { t } from \"../../../lang\";\nimport { runHooks } from \"../../../utils/hooks\";\nimport { TicketTrigger } from \"../../../types/Ticket\";\nimport {\n  canCreateTicketTarget,\n  performTicketChecks,\n} from \"../../../utils/tickets/performChecks\";\nimport { buildTicketFormModal } from \"../../../utils/tickets/buildFormModal\";\nimport { getUserPermissions } from \"../../../utils/calculateUserPermissions\";\nimport { ticketQueueManager } from \"../../..\";\n\nconst command: AppCommand = {\n  type: \"slash\",\n  data: new SlashCommandBuilder()\n    .setName(\"ticket\")\n    .setDescription(\"Open a ticket\")\n    .setContexts(InteractionContextType.Guild)\n    .setDefaultMemberPermissions(PermissionFlagsBits.ManageChannels)\n    .setNameLocalizations({})\n    .setDescriptionLocalizations({})\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger\")\n        .setDescription(\"Select a trigger to open a ticket with\")\n        .setRequired(true)\n        .setNameLocalizations({})\n        .setDescriptionLocalizations({})\n        .setAutocomplete(true)\n    )\n    .addUserOption((opt) =>\n      opt\n        .setName(\"user\")\n        .setDescription(\"Force a user into a ticket (requires permission)\")\n        .setRequired(false)\n    ),\n\n  async autocomplete(client, interaction) {\n    if (!interaction.guildId) return;\n    const focused = interaction.options.getFocused(true).name;\n\n    if (focused === \"trigger\") {\n      const focusedValue = interaction.options.getString(\"trigger\", true);\n      const triggers = await getServerTicketTriggers(interaction.guildId);\n      if (!triggers.length) {\n        interaction.respond([\n          {\n            name: \"There are no triggers!\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const filtered = triggers.filter((m) =>\n        m.label.toLowerCase().includes(focusedValue.toLowerCase())\n      );\n\n      interaction.respond(\n        filtered\n          .map((m) => ({\n            name: m.label,\n            value: m._id,\n          }))\n          .slice(0, 25)\n      );\n    }\n  },\n\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    const member = (interaction.options.getMember(\"user\") ||\n      interaction.member) as GuildMember;\n    const user = (interaction.options.getUser(\"user\") ||\n      interaction.user) as User;\n\n    const trigger = await getServerTicketTrigger(\n      interaction.options.getString(\"trigger\", true),\n      interaction.guildId\n    );\n    if (!trigger)\n      return interaction.reply(\n        (await onError(new Error(\"Trigger not found\"))).discordMsg\n      );\n\n    const triggerObject = trigger.toObject();\n    const triggerTyped: TicketTrigger = {\n      ...triggerObject,\n    };\n\n    if (trigger.form.length && interaction.user.id === user.id) {\n      const modal = buildTicketFormModal(\n        triggerTyped.form,\n        `ticket:${trigger._id}`,\n        triggerTyped.label\n      );\n\n      if (modal instanceof Error)\n        return await interaction.reply({\n          ...(\n            await onError(new Error(modal.message), { stack: modal.stack })\n          ).discordMsg,\n          flags: [MessageFlags.Ephemeral],\n        });\n\n      return interaction.showModal(modal);\n    }\n\n    await interaction.reply({\n      content: t(data.lang!, \"TICKET_CREATE_PERFORMING_CHECKS\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n\n    const userPermissions = getUserPermissions(\n      interaction.member as GuildMember,\n      await getServerGroupsByIds(trigger.groups, interaction.guildId)\n    );\n\n    if (\n      !userPermissions.tickets.canForceOpen &&\n      !interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild)\n    )\n      return interaction.editReply(\n        (await onError(new Error(\"Missing force-open permission\"))).discordMsg\n      );\n\n    ticketQueueManager.wrap(async () => {\n      const checks = await performTicketChecks(triggerTyped, member);\n\n      if (!checks.allowed) {\n        return interaction.editReply(\n          (\n            await onError(\n              new Error(t(data.lang!, `ERROR_CODE_${checks.error}`))\n            )\n          ).discordMsg\n        );\n      }\n\n      const checkTargetChannel = await canCreateTicketTarget(\n        interaction.guild!,\n        trigger.isThread ? \"thread\" : \"channel\",\n        trigger.openChannel || interaction.channelId\n      );\n      if (!checkTargetChannel.allowed)\n        return interaction.editReply(\n          (\n            await onError(\n              new Error(t(data.lang!, `ERROR_CODE_${checkTargetChannel.error}`))\n            )\n          ).discordMsg\n        );\n\n      await interaction.editReply({\n        content: t(data.lang!, \"TICKET_CREATE_CHECKS_PASSED\"),\n      });\n\n      await runHooks(\"TicketCreate\", {\n        client: client,\n        guild: interaction.guild!,\n        lang: data.lang!,\n        messageOrInteraction: interaction,\n        owner: member.id,\n        responses: [],\n        trigger: triggerTyped,\n        user: user,\n      });\n    }, interaction.guildId);\n  },\n};\n\nexport default command;\n"],"names":[],"mappings":"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","debug_id":"5903efe8-d9a8-5237-be62-8a0dbd9f736c"}