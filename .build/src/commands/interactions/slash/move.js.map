{"version":3,"file":"move.js","sources":["src/commands/interactions/slash/move.ts"],"sourceRoot":"/","sourcesContent":["import {\n  CategoryChannel,\n  ChannelType,\n  GuildMember,\n  InteractionContextType,\n  MessageFlags,\n  PermissionFlagsBits,\n  SlashCommandBuilder,\n  TextChannel,\n} from \"discord.js\";\nimport { AppCommand } from \"../../../types/Command\";\nimport { t } from \"../../../lang\";\nimport {\n  getServerGroupsByIds,\n  getTicketTrust,\n} from \"../../../utils/bot/getServer\";\nimport { onError } from \"../../../utils/onError\";\nimport { getUserPermissions } from \"../../../utils/calculateUserPermissions\";\nimport { TicketChannelManager } from \"../../../utils/bot/TicketChannelManager\";\nimport { fetchChannelById } from \"../../../utils/bot/fetchMessage\";\nimport { buildChannelPermissionOverwrites } from \"../../../utils/hooks/events/tickets/new/main\";\nimport ticketOwnerPermissions from \"../../../constants/ticketOwnerPermissions\";\nimport ticketOwnerPermissionsClosed from \"../../../constants/ticketOwnerPermissionsClosed\";\nimport everyoneTicketPermissions from \"../../../constants/everyoneTicketPermissions\";\nimport botTicketPermissions from \"../../../constants/botTicketPermissions\";\n\nconst command: AppCommand = {\n  type: \"slash\",\n  data: new SlashCommandBuilder()\n    .setName(\"move\")\n    .setDescription(\"Move this ticket\")\n    .setContexts(InteractionContextType.Guild)\n    .setNameLocalizations({})\n    .setDescriptionLocalizations({})\n    .addStringOption((opt) =>\n      opt\n        .setName(\"channel\")\n        .setDescription(\"The channel to move this ticket to\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    ),\n\n  async autocomplete(client, interaction) {\n    if (!interaction.guildId) return;\n    const focused = interaction.options.getFocused(true).name;\n\n    if (focused === \"channel\") {\n      const focusedValue = interaction.options.getString(\"channel\", true);\n      const ticketId = await new TicketChannelManager().getTicketId(\n        interaction.channelId\n      );\n      if (!ticketId) {\n        interaction.respond([\n          {\n            name: \"This is not a ticket that can be moved\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const ticket = await getTicketTrust(ticketId);\n      const channels = await Promise.all(\n        ticket!.categoriesAvailableToMoveTicketsTo\n          .map(async (c) => await fetchChannelById(client, c))\n          .filter(async (c) => (await c)?.type === ChannelType.GuildCategory)\n      );\n      if (!channels.length) {\n        interaction.respond([\n          {\n            name: \"No channels available\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const filtered = channels.filter((c) =>\n        (c as CategoryChannel).name\n          .toLowerCase()\n          .includes(focusedValue.toLowerCase())\n      );\n\n      const map = filtered\n        .map((c) => ({\n          name: (c as CategoryChannel).name.slice(0, 100) ?? \"Unknown\",\n          value: (c as CategoryChannel).id,\n        }))\n        .slice(0, 25);\n      interaction.respond(map);\n    }\n  },\n\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    await interaction.reply({\n      content: t(data.lang!, \"THINK\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n    const ticketId = await new TicketChannelManager().getTicketId(\n      interaction.channelId\n    );\n    if (!ticketId)\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Ticket not found\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    const ticket = await getTicketTrust(ticketId);\n    if (!ticket)\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Ticket not found\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n    const ticketChannel = interaction.channel!;\n    if (ticketChannel.isThread() || !ticketChannel.isTextBased())\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Ticket can't move\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    const userPermissions = getUserPermissions(\n      interaction.member as GuildMember,\n      await getServerGroupsByIds(ticket.groups, interaction.guildId)\n    );\n\n    if (\n      !userPermissions.tickets.canMove &&\n      !interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild)\n    )\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Missing move permission\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    const newParentId = interaction.options.getString(\"channel\", true);\n    const newParent = await fetchChannelById(client, newParentId);\n\n    if (!newParent || newParent?.type !== ChannelType.GuildCategory)\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Invalid channel type\"), {\n            ticketId: ticketId,\n          })\n        ).discordMsg\n      );\n\n    (ticketChannel as TextChannel)\n      .edit({ parent: newParent.id })\n      .then(async () => {\n        if (ticket.syncChannelPermissionsWhenMoved) {\n          (ticketChannel as TextChannel).edit({\n            permissionOverwrites: [\n              ...newParent.permissionOverwrites.cache.map((overwrite) => {\n                return {\n                  id: overwrite.id,\n                  type: overwrite.type,\n                  allow: overwrite.allow.toArray(),\n                  deny: overwrite.deny.toArray(),\n                };\n              }),\n              ...buildChannelPermissionOverwrites(\n                [],\n                interaction.guildId!,\n                {\n                  id: ticket.owner,\n                  ...(ticket.status === \"Open\"\n                    ? ticketOwnerPermissions\n                    : ticketOwnerPermissionsClosed),\n                },\n                everyoneTicketPermissions,\n                { id: client.user!.id, ...botTicketPermissions }\n              ),\n            ].slice(0, 100),\n          });\n        }\n      });\n\n    interaction.editReply({\n      content: t(data.lang!, \"TICKET_MOVED\"),\n    });\n  },\n};\n\nexport default command;\n"],"names":[],"mappings":";;;;;;;AAAA,2CASoB;AAEpB,wCAAkC;AAClC,4DAGsC;AACtC,oDAAiD;AACjD,sFAA6E;AAC7E,kFAA+E;AAC/E,kEAAmE;AACnE,uEAAgG;AAChG,uGAA+E;AAC/E,mHAA2F;AAC3F,6GAAqF;AACrF,mGAA2E;AAE3E,MAAM,OAAO,GAAe;IAC1B,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,IAAI,gCAAmB,EAAE;SAC5B,OAAO,CAAC,MAAM,CAAC;SACf,cAAc,CAAC,kBAAkB,CAAC;SAClC,WAAW,CAAC,mCAAsB,CAAC,KAAK,CAAC;SACzC,oBAAoB,CAAC,EAAE,CAAC;SACxB,2BAA2B,CAAC,EAAE,CAAC;SAC/B,eAAe,CAAC,CAAC,GAAG,EAAE,EAAE,CACvB,GAAG;SACA,OAAO,CAAC,SAAS,CAAC;SAClB,cAAc,CAAC,oCAAoC,CAAC;SACpD,WAAW,CAAC,IAAI,CAAC;SACjB,eAAe,CAAC,IAAI,CAAC,CACzB;IAEH,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW;QACpC,IAAI,CAAC,WAAW,CAAC,OAAO;YAAE,OAAO;QACjC,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;QAE1D,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YAC1B,MAAM,YAAY,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACpE,MAAM,QAAQ,GAAG,MAAM,IAAI,2CAAoB,EAAE,CAAC,WAAW,CAC3D,WAAW,CAAC,SAAS,CACtB,CAAC;YACF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,WAAW,CAAC,OAAO,CAAC;oBAClB;wBACE,IAAI,EAAE,wCAAwC;wBAC9C,KAAK,EAAE,EAAE;qBACV;iBACF,CAAC,CAAC;gBACH,OAAO;YACT,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAc,EAAC,QAAQ,CAAC,CAAC;YAC9C,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,GAAG,CAChC,MAAO,CAAC,kCAAkC;iBACvC,GAAG,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,MAAM,IAAA,+BAAgB,EAAC,MAAM,EAAE,CAAC,CAAC,CAAC;iBACnD,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,KAAK,wBAAW,CAAC,aAAa,CAAC,CACtE,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACrB,WAAW,CAAC,OAAO,CAAC;oBAClB;wBACE,IAAI,EAAE,uBAAuB;wBAC7B,KAAK,EAAE,EAAE;qBACV;iBACF,CAAC,CAAC;gBACH,OAAO;YACT,CAAC;YAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CACpC,CAAqB,CAAC,IAAI;iBACxB,WAAW,EAAE;iBACb,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CACxC,CAAC;YAEF,MAAM,GAAG,GAAG,QAAQ;iBACjB,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;gBACX,IAAI,EAAG,CAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,SAAS;gBAC5D,KAAK,EAAG,CAAqB,CAAC,EAAE;aACjC,CAAC,CAAC;iBACF,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAChB,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW;QACrC,IAAI,CAAC,WAAW,CAAC,OAAO;YAAE,OAAO;QACjC,MAAM,WAAW,CAAC,KAAK,CAAC;YACtB,OAAO,EAAE,IAAA,QAAC,EAAC,IAAI,CAAC,IAAK,EAAE,OAAO,CAAC;YAC/B,KAAK,EAAE,CAAC,yBAAY,CAAC,SAAS,CAAC;SAChC,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,MAAM,IAAI,2CAAoB,EAAE,CAAC,WAAW,CAC3D,WAAW,CAAC,SAAS,CACtB,CAAC;QACF,IAAI,CAAC,QAAQ;YACX,OAAO,WAAW,CAAC,SAAS,CAC1B,CACE,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,EAAE;gBAC3C,QAAQ,EAAE,QAAQ;aACnB,CAAC,CACH,CAAC,UAAU,CACb,CAAC;QAEJ,MAAM,MAAM,GAAG,MAAM,IAAA,0BAAc,EAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM;YACT,OAAO,WAAW,CAAC,SAAS,CAC1B,CACE,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,kBAAkB,CAAC,EAAE;gBAC3C,QAAQ,EAAE,QAAQ;aACnB,CAAC,CACH,CAAC,UAAU,CACb,CAAC;QACJ,MAAM,aAAa,GAAG,WAAW,CAAC,OAAQ,CAAC;QAC3C,IAAI,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;YAC1D,OAAO,WAAW,CAAC,SAAS,CAC1B,CACE,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,EAAE;gBAC5C,QAAQ,EAAE,QAAQ;aACnB,CAAC,CACH,CAAC,UAAU,CACb,CAAC;QAEJ,MAAM,eAAe,GAAG,IAAA,6CAAkB,EACxC,WAAW,CAAC,MAAqB,EACjC,MAAM,IAAA,gCAAoB,EAAC,MAAM,CAAC,MAAM,EAAE,WAAW,CAAC,OAAO,CAAC,CAC/D,CAAC;QAEF,IACE,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO;YAChC,CAAC,WAAW,CAAC,iBAAiB,EAAE,GAAG,CAAC,gCAAmB,CAAC,WAAW,CAAC;YAEpE,OAAO,WAAW,CAAC,SAAS,CAC1B,CACE,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,EAAE;gBAClD,QAAQ,EAAE,QAAQ;aACnB,CAAC,CACH,CAAC,UAAU,CACb,CAAC;QAEJ,MAAM,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACnE,MAAM,SAAS,GAAG,MAAM,IAAA,+BAAgB,EAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAE9D,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE,IAAI,KAAK,wBAAW,CAAC,aAAa;YAC7D,OAAO,WAAW,CAAC,SAAS,CAC1B,CACE,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,sBAAsB,CAAC,EAAE;gBAC/C,QAAQ,EAAE,QAAQ;aACnB,CAAC,CACH,CAAC,UAAU,CACb,CAAC;QAEH,aAA6B;aAC3B,IAAI,CAAC,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC;aAC9B,IAAI,CAAC,KAAK,IAAI,EAAE;YACf,IAAI,MAAM,CAAC,+BAA+B,EAAE,CAAC;gBAC1C,aAA6B,CAAC,IAAI,CAAC;oBAClC,oBAAoB,EAAE;wBACpB,GAAG,SAAS,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;4BACxD,OAAO;gCACL,EAAE,EAAE,SAAS,CAAC,EAAE;gCAChB,IAAI,EAAE,SAAS,CAAC,IAAI;gCACpB,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE;gCAChC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE;6BAC/B,CAAC;wBACJ,CAAC,CAAC;wBACF,GAAG,IAAA,uCAAgC,EACjC,EAAE,EACF,WAAW,CAAC,OAAQ,EACpB;4BACE,EAAE,EAAE,MAAM,CAAC,KAAK;4BAChB,GAAG,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM;gCAC1B,CAAC,CAAC,gCAAsB;gCACxB,CAAC,CAAC,sCAA4B,CAAC;yBAClC,EACD,mCAAyB,EACzB,EAAE,EAAE,EAAE,MAAM,CAAC,IAAK,CAAC,EAAE,EAAE,GAAG,8BAAoB,EAAE,CACjD;qBACF,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;iBAChB,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEL,WAAW,CAAC,SAAS,CAAC;YACpB,OAAO,EAAE,IAAA,QAAC,EAAC,IAAI,CAAC,IAAK,EAAE,cAAc,CAAC;SACvC,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,kBAAe,OAAO,CAAC","debug_id":"30d3590d-7529-5066-9900-cd6f3310752a"}