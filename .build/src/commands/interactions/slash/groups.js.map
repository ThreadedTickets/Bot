{"version":3,"file":"groups.js","sources":["src/commands/interactions/slash/groups.ts"],"sourceRoot":"/","sourcesContent":["import {\n  GuildMember,\n  InteractionContextType,\n  MessageFlags,\n  PermissionFlagsBits,\n  SlashCommandBuilder,\n} from \"discord.js\";\nimport { AppCommand } from \"../../../types/Command\";\nimport { getServerGroup, getServerGroups } from \"../../../utils/bot/getServer\";\nimport { t } from \"../../../lang\";\nimport { getUserPermissions } from \"../../../utils/calculateUserPermissions\";\nimport { GroupCreatorSchema } from \"../../../database/modals/GroupCreator\";\nimport { onError } from \"../../../utils/onError\";\nimport { updateCachedData } from \"../../../utils/database/updateCache\";\nimport { invalidateCache } from \"../../../utils/database/invalidateCache\";\nimport { GroupSchema } from \"../../../database/modals/Guild\";\n\nconst cmd: AppCommand = {\n  type: \"slash\",\n  data: new SlashCommandBuilder()\n    .setName(\"groups\")\n    .setDescription(\"Groups configuration base\")\n    .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild)\n    .setContexts(InteractionContextType.Guild)\n    .addSubcommand((cmd) =>\n      cmd.setName(\"new\").setDescription(\"Create a new group\")\n    )\n    .addSubcommand((cmd) =>\n      cmd\n        .setName(\"edit\")\n        .setDescription(\"Edit an existing group\")\n        .addStringOption((opt) =>\n          opt\n            .setName(\"group\")\n            .setDescription(\"Which group do you want to edit?\")\n            .setRequired(true)\n            .setAutocomplete(true)\n        )\n    )\n    .addSubcommand((cmd) =>\n      cmd\n        .setName(\"delete\")\n        .setDescription(\"Delete an existing group\")\n        .addStringOption((opt) =>\n          opt\n            .setName(\"group\")\n            .setDescription(\"Which group do you want to delete?\")\n            .setRequired(true)\n            .setAutocomplete(true)\n        )\n    ),\n  async autocomplete(client, interaction) {\n    if (!interaction.guildId) return;\n    const focused = interaction.options.getFocused(true).name;\n    if (focused === \"group\") {\n      const focusedValue = interaction.options.getString(\"group\", true);\n      const groups = await getServerGroups(interaction.guildId);\n      if (!groups.length) {\n        interaction.respond([\n          {\n            name: \"You don't have any groups!\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const filtered = groups.filter((m) =>\n        m.name.toLowerCase().includes(focusedValue.toLowerCase())\n      );\n\n      interaction.respond(\n        filtered\n          .map((m) => ({\n            name: m.name,\n            value: m._id,\n          }))\n          .slice(0, 25)\n      );\n    }\n  },\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    const subcommand = interaction.options.getSubcommand(true);\n    const lang = data.lang!;\n\n    await interaction.reply({\n      content: t(data.lang!, \"THINK\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n\n    const groups = await getServerGroups(interaction.guildId);\n    const userPermissions = getUserPermissions(\n      interaction.member as GuildMember,\n      groups\n    );\n\n    if (subcommand === \"new\") {\n      if (!interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild))\n        return interaction.editReply(\n          (await onError(new Error(\"Missing permission\"))).discordMsg\n        );\n\n      const document = await GroupCreatorSchema.create({\n        guildId: interaction.guildId,\n        metadata: {\n          roles: interaction.guild?.roles.cache\n            .filter((r) => r.id != interaction.guildId)\n            .sort((a, b) => b.position - a.position)\n            .map((role) => ({\n              id: role.id,\n              name: role.name,\n              colour: role.hexColor,\n            })),\n        },\n      });\n\n      updateCachedData(\n        `groupCreators:${document._id}`,\n        parseInt(process.env[\"TTL_GROUP_CREATORS\"]!),\n        document.toObject()\n      );\n\n      interaction.editReply({\n        content: t(lang, \"GROUP_CREATE_GOTO_LINK\", {\n          link: `${process.env[\"URL_GROUP_CREATOR\"]}?id=${document._id}`,\n        }),\n      });\n    } else if (subcommand === \"edit\") {\n      if (!interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild))\n        return interaction.editReply(\n          (await onError(new Error(\"Missing permission\"))).discordMsg\n        );\n      const id = interaction.options.getString(\"group\", true);\n      const group = await getServerGroup(id, interaction.guildId);\n      if (!group) {\n        const error = (await onError(new Error(\"Group not found\"))).discordMsg;\n\n        interaction.editReply(error);\n        return;\n      }\n\n      const document = await GroupCreatorSchema.create({\n        guildId: interaction.guildId,\n        existingGroup: group,\n        metadata: {\n          link: id,\n          roles: interaction.guild?.roles.cache\n            .filter((r) => r.id != interaction.guildId)\n            .sort((a, b) => b.position - a.position)\n            .map((role) => ({\n              id: role.id,\n              name: role.name,\n              colour: role.hexColor,\n            })),\n        },\n      });\n\n      updateCachedData(\n        `groupCreators:${document._id}`,\n        parseInt(process.env[\"TTL_GROUP_CREATORS\"]!),\n        document.toObject()\n      );\n\n      interaction.editReply({\n        content: t(lang, \"GROUP_CREATE_GOTO_LINK\", {\n          link: `${process.env[\"URL_GROUP_CREATOR\"]}?id=${document._id}`,\n        }),\n      });\n    } else if (subcommand === \"delete\") {\n      if (!interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild))\n        return interaction.editReply(\n          (await onError(new Error(\"Missing permission\"))).discordMsg\n        );\n      const id = interaction.options.getString(\"group\", true);\n      const group = await getServerGroup(id, interaction.guildId);\n      if (!group) {\n        const error = (await onError(new Error(\"Group not found\"))).discordMsg;\n\n        interaction.editReply(error);\n        return;\n      }\n\n      await GroupSchema.findOneAndDelete({ _id: id });\n      await invalidateCache(`groups:${interaction.guildId}`);\n      await invalidateCache(`group:${id}`);\n\n      interaction.editReply({\n        content: t(lang, \"GROUP_DELETED\"),\n      });\n    }\n  },\n};\n\nexport default cmd;\n"],"names":[],"mappings":"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","debug_id":"69497bdb-39c4-5e87-8ff6-2ded915aa5f5"}