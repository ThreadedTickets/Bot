{"version":3,"file":"panel.js","sources":["src/commands/interactions/slash/panel.ts"],"sourceRoot":"/","sourcesContent":["import {\n  ActionRowBuilder,\n  ButtonBuilder,\n  ButtonStyle,\n  GuildMember,\n  InteractionContextType,\n  MessageFlags,\n  PermissionFlagsBits,\n  SlashCommandBuilder,\n  StringSelectMenuBuilder,\n  StringSelectMenuOptionBuilder,\n  TextChannel,\n} from \"discord.js\";\nimport { AppCommand } from \"../../../types/Command\";\nimport {\n  getServerApplications,\n  getServerGroups,\n  getServerMessage,\n  getServerMessages,\n  getServerTicketTriggers,\n} from \"../../../utils/bot/getServer\";\nimport { onError } from \"../../../utils/onError\";\nimport { t } from \"../../../lang\";\nimport { Locale } from \"../../../types/Locale\";\nimport { resolveDiscordMessagePlaceholders } from \"../../../utils/message/placeholders/resolvePlaceholders\";\nimport serverMessageToDiscordMessage from \"../../../utils/formatters/serverMessageToDiscordMessage\";\nimport { generateBasePlaceholderContext } from \"../../../utils/message/placeholders/generateBaseContext\";\nimport { formatDuration } from \"../../../utils/formatters/duration\";\nimport { getUserPermissions } from \"../../../utils/calculateUserPermissions\";\nimport logger from \"../../../utils/logger\";\n\nconst command: AppCommand = {\n  type: \"slash\",\n  data: new SlashCommandBuilder()\n    .setName(\"panel\")\n    .setDescription(\"Create a new panel!\")\n    .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild)\n    .setContexts(InteractionContextType.Guild)\n    .setNameLocalizations({})\n    .setDescriptionLocalizations({})\n    .addStringOption((opt) =>\n      opt\n        .setName(\"message\")\n        .setDescription(\"Choose a trigger\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"type\")\n        .setDescription(\"What component type should the panel use?\")\n        .setRequired(true)\n        .setChoices([\n          { name: \"Buttons (better for 1-5 triggers)\", value: \"button\" },\n          { name: \"Dropdown (better for 5+ triggers)\", value: \"select\" },\n        ])\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_1\")\n        .setDescription(\"Pick a trigger\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"dropdown_placeholder\")\n        .setDescription(\"Only needed if doing a dropdown panel\")\n        .setMaxLength(100)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_2\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_3\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_4\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_5\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_6\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_7\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_8\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_9\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_10\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_11\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_12\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_13\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_14\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_15\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_16\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_17\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_18\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_19\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    )\n    .addStringOption((opt) =>\n      opt\n        .setName(\"trigger_20\")\n        .setDescription(\"Pick a trigger\")\n        .setAutocomplete(true)\n    ),\n\n  async autocomplete(client, interaction) {\n    if (!interaction.guildId) return;\n    const focused = interaction.options.getFocused(true).name;\n\n    if (focused === \"message\") {\n      const focusedValue = interaction.options.getString(\"message\", true);\n      const message = await getServerMessages(interaction.guildId);\n      if (!message.length) {\n        interaction.respond([\n          {\n            name: \"You don't have any message!\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const filtered = message.filter((m) =>\n        m.name.toLowerCase().includes(focusedValue.toLowerCase())\n      );\n\n      interaction.respond(\n        filtered\n          .map((m) => ({\n            name: m.name,\n            value: m._id,\n          }))\n          .slice(0, 25)\n      );\n    } else if (focused.startsWith(\"trigger\")) {\n      const focusedValue = interaction.options.getString(\n        `trigger_${focused.split(\"_\")[1]}`,\n        true\n      );\n      const triggers = [\n        ...(await getServerApplications(interaction.guildId)),\n        ...(await getServerTicketTriggers(interaction.guildId)),\n      ];\n      if (!triggers.length) {\n        interaction.respond([\n          {\n            name: \"You don't have any triggers!\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const filtered = triggers.filter((m) =>\n        \"name\" in m\n          ? m.name.toLowerCase().includes(focusedValue.toLowerCase())\n          : m.label.toLowerCase().includes(focusedValue.toLowerCase())\n      );\n\n      interaction.respond(\n        filtered\n          .map((m) => ({\n            name:\n              \"name\" in m\n                ? `[Application] ${m.name}`.slice(0, 100)\n                : `[Ticket] ${m.label}`.slice(0, 100),\n            value: m._id,\n          }))\n          .slice(0, 25)\n      );\n    }\n  },\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    const start = new Date();\n\n    const groups = await getServerGroups(interaction.guildId);\n    const userPermissions = getUserPermissions(\n      interaction.member as GuildMember,\n      groups\n    );\n    if (\n      !userPermissions.panels.manage &&\n      !interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild)\n    )\n      return interaction.reply(\n        (await onError(new Error(\"Missing manage permission\"))).discordMsg\n      );\n\n    const message = await getServerMessage(\n      interaction.options.getString(\"message\", true),\n      interaction.guildId\n    );\n    if (!message) {\n      const error = (await onError(new Error(\"Message not found\"))).discordMsg;\n\n      interaction.reply(error);\n      return;\n    }\n\n    await interaction.reply({\n      content: t(data.lang!, \"PROCESSING_PANEL\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n\n    const triggerValues = interaction.options.data\n      .filter((opt) => opt.name.startsWith(\"trigger_\") && opt.value != null)\n      .sort(\n        (a, b) => Number(a.name.split(\"_\")[1]) - Number(b.name.split(\"_\")[1])\n      )\n      .map((opt) => opt.value as string);\n\n    // Validate all values\n    const ticketTriggers = await getServerTicketTriggers(interaction.guildId);\n    const applicationTriggers = await getServerApplications(\n      interaction.guildId\n    );\n\n    const validTriggers = [];\n    for (const value of triggerValues) {\n      if (value.startsWith(\"TT_\")) {\n        const ticket = ticketTriggers.find((t) => t._id === value);\n        if (!ticket) continue;\n\n        validTriggers.push({\n          label: ticket.label,\n          description: ticket.description,\n          colour: ticket.colour,\n          value: `ticket:${ticket._id}`,\n        });\n      } else {\n        const app = applicationTriggers.find((a) => a._id === value);\n        if (!app) continue;\n\n        validTriggers.push({\n          label: app.name,\n          colour: ButtonStyle.Secondary,\n          value: `apply:${app._id}`,\n        });\n      }\n    }\n\n    const channel = interaction.channel as TextChannel;\n    channel.send({\n      ...resolveDiscordMessagePlaceholders(\n        serverMessageToDiscordMessage(message),\n        generateBasePlaceholderContext({ server: interaction.guild! })\n      ),\n      components: buildTriggerActionRows(\n        validTriggers,\n        interaction.options.getString(\"type\", true) as \"button\" | \"select\",\n        interaction.options.getString(\"dropdown_placeholder\") ?? \"Open a ticket\"\n      ),\n    });\n\n    logger.debug(\n      `Processing new panel took ${formatDuration(\n        new Date().getTime() - start.getTime()\n      )}`\n    );\n  },\n};\n\nexport default command;\n\nfunction buildTriggerActionRows(\n  triggers: {\n    label: string;\n    value: string;\n    description?: string;\n    colour?: ButtonStyle;\n  }[],\n  type: \"button\" | \"select\",\n  placeholder: string\n): ActionRowBuilder<any>[] {\n  // Remove duplicates by `value`\n  const uniqueTriggers = Array.from(\n    new Map(triggers.map((t) => [t.value, t])).values()\n  );\n\n  if (type === \"button\") {\n    const rows: ActionRowBuilder<ButtonBuilder>[] = [];\n    for (let i = 0; i < uniqueTriggers.length; i += 5) {\n      const chunk = uniqueTriggers.slice(i, i + 5);\n      const row = new ActionRowBuilder<ButtonBuilder>().addComponents(\n        ...chunk.map((trigger) =>\n          new ButtonBuilder()\n            .setCustomId(trigger.value)\n            .setLabel(trigger.label)\n            .setStyle(trigger.colour ?? ButtonStyle.Secondary)\n        )\n      );\n      rows.push(row);\n    }\n    return rows;\n  }\n\n  if (type === \"select\") {\n    const row = new ActionRowBuilder<StringSelectMenuBuilder>().addComponents(\n      new StringSelectMenuBuilder()\n        .setCustomId(\"ticket\")\n        .setPlaceholder(placeholder)\n        .addOptions(\n          uniqueTriggers.slice(0, 25).map((trigger) => {\n            const option = new StringSelectMenuOptionBuilder()\n              .setLabel(trigger.label)\n              .setValue(trigger.value);\n            if (trigger.description) {\n              option.setDescription(trigger.description.slice(0, 100));\n            }\n            return option;\n          })\n        )\n    );\n    return [row];\n  }\n\n  throw new Error(\"Invalid type: must be 'button' or 'select'\");\n}\n"],"names":[],"mappings":"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","debug_id":"ecfae2a7-c611-5e6e-a307-f478d54fb1ee"}