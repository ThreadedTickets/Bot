{"version":3,"file":"applicationHistory.js","sources":["src/commands/interactions/slash/applicationHistory.ts"],"sourceRoot":"/","sourcesContent":["import {\n  GuildMember,\n  InteractionContextType,\n  MessageFlags,\n  PermissionFlagsBits,\n  SlashCommandBuilder,\n} from \"discord.js\";\nimport { AppCommand } from \"../../../types/Command\";\nimport { t } from \"../../../lang\";\nimport {\n  getServerApplication,\n  getServerApplications,\n  getServerGroupsByIds,\n  getUserCompletedApplications,\n} from \"../../../utils/bot/getServer\";\nimport { onError } from \"../../../utils/onError\";\nimport { getUserPermissions } from \"../../../utils/calculateUserPermissions\";\nimport { paginateStrings } from \"../../../utils/formatters/paginateStrings\";\nimport { paginateWithButtons } from \"../../../utils/paginateWithButtons\";\n\nconst command: AppCommand = {\n  type: \"slash\",\n  data: new SlashCommandBuilder()\n    .setName(\"application_history\")\n    .setDescription(\"Get a user's application history\")\n    .setContexts(InteractionContextType.Guild)\n    .setNameLocalizations({})\n    .setDescriptionLocalizations({})\n    .addStringOption((opt) =>\n      opt\n        .setName(\"application\")\n        .setDescription(\"Select an application\")\n        .setRequired(true)\n        .setAutocomplete(true)\n    )\n    .addUserOption((opt) =>\n      opt.setDescription(\"Select a user\").setName(\"user\").setRequired(true)\n    ),\n\n  async autocomplete(client, interaction) {\n    if (!interaction.guildId) return;\n    const focused = interaction.options.getFocused(true).name;\n\n    if (focused === \"application\") {\n      const focusedValue = interaction.options.getString(\"application\", true);\n      const applications = await getServerApplications(interaction.guildId);\n      if (!applications.length) {\n        interaction.respond([\n          {\n            name: \"You have no applications!\",\n            value: \"\",\n          },\n        ]);\n        return;\n      }\n\n      const filtered = applications.filter((m) =>\n        m.name.toLowerCase().includes(focusedValue.toLowerCase())\n      );\n\n      interaction.respond(\n        filtered\n          .map((m) => ({\n            name: m.name,\n            value: m._id,\n          }))\n          .slice(0, 25)\n      );\n    }\n  },\n\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    await interaction.reply({\n      content: t(data.lang!, \"THINK\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n\n    const applicationId = interaction.options.getString(\"application\", true);\n    const user = interaction.options.getUser(\"user\", true);\n    const application = await getServerApplication(\n      applicationId,\n      interaction.guildId\n    );\n    if (!application)\n      return interaction.editReply(\n        (\n          await onError(new Error(\"Application not found\"), {\n            applicationId,\n            guildId: interaction.guildId,\n          })\n        ).discordMsg\n      );\n    const userPermissions = getUserPermissions(\n      interaction.member as GuildMember,\n      await getServerGroupsByIds(application.groups, interaction.guildId)\n    );\n\n    if (\n      !userPermissions.applications.manage &&\n      !userPermissions.applications.respond &&\n      !interaction.memberPermissions?.has(PermissionFlagsBits.ManageGuild)\n    )\n      return interaction.editReply(\n        (await onError(new Error(\"Missing manage/respond permission\")))\n          .discordMsg\n      );\n\n    const allApplications = await getUserCompletedApplications(\n      application._id,\n      user.id\n    );\n    if (!allApplications.length)\n      return interaction.editReply(\n        (await onError(new Error(\"No records\"))).discordMsg\n      );\n\n    const applicationHistoryStrings = allApplications\n      .map(\n        (a) =>\n          `<t:${Math.round(\n            new Date(a.createdAt).getTime() / 1000\n          )}:f>\\n> Attempt ID: \\`${a._id}\\`\\n> Status: ${\n            a.messageLink\n              ? `[\\`${a.status}\\`](${a.messageLink})`\n              : `\\`${a.status}\\``\n          }\\n`\n      )\n      .reverse();\n\n    const paginatedMessages = paginateStrings(\n      applicationHistoryStrings,\n      5,\n      `Applications for ${application?.name ?? \"`Unknown application`\"}`\n    );\n\n    await paginateWithButtons(\n      interaction.user.id,\n      interaction,\n      paginatedMessages\n    );\n  },\n};\n\nexport default command;\n"],"names":[],"mappings":"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","debug_id":"79df6da4-cbaa-5539-80a8-1e0cf2a08238"}