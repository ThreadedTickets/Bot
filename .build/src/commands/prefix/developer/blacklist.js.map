{"version":3,"file":"blacklist.js","sources":["src/commands/prefix/developer/blacklist.ts"],"sourceRoot":"/","sourcesContent":["import axios from \"axios\";\nimport { CommandPermission } from \"../../../constants/permissions\";\nimport { PrefixCommand } from \"../../../types/Command\";\nimport { getAxiosErrorMessage } from \"../../../utils/getAxiosError\";\nimport { postToWebhook } from \"../../../utils/message/webhookPoster\";\nimport { WebhookTypes } from \"../../../constants/webhooks\";\n\nconst API_URL = process.env[\"THREADED_API_URL\"];\nconst API_TOKEN = process.env[\"THREADED_API_TOKEN\"];\n\nconst command: PrefixCommand<{\n  action: \"add\" | \"remove\" | \"get\" | \"history\";\n  id: string;\n  type: \"server\" | \"user\";\n  reason: string;\n}> = {\n  name: \"blacklist\",\n  aliases: [\"bl\"],\n  permissionLevel: CommandPermission.Admin,\n  usage:\n    \"<action:(add|remove|get|history)> <id> <type{action === 'add'}:(server|user)> [reason{action === 'add'}=No reason provided+]\",\n  async execute(client, data, message, args) {\n    if (args.action === \"add\") {\n      const progressMessage = await message.reply({\n        content: \"Blacklisting.....\",\n      });\n\n      try {\n        const req = await axios.post(\n          `${API_URL}/api/blacklist/add`,\n          {\n            id: args.id,\n            type: args.type,\n            reason: args.reason,\n            addedBy: message.author.id,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${API_TOKEN}`,\n            },\n          }\n        );\n\n        if (req.status === 200) {\n          progressMessage.edit({\n            content: `[${args.type}] ${args.id} added to blacklist for ${args.reason}`,\n          });\n          postToWebhook(WebhookTypes.BlacklistLog, {\n            content: `**[${args.type}]** *\\`${args.id}\\`* added to blacklist by *\\`${message.author.id}\\`* for ***\\`${args.reason}\\`***`,\n            avatar_url: client.user?.avatarURL()!,\n            username: client.user?.username,\n          });\n        } else\n          progressMessage.edit({\n            content: `Action failed: ${req.data?.message}`,\n          });\n      } catch (error) {\n        progressMessage.edit({\n          content: `Action failed: ${getAxiosErrorMessage(error)}`,\n        });\n      }\n    } else if (args.action === \"get\") {\n      const progressMessage = await message.reply({\n        content: \"Fetching.....\",\n      });\n\n      try {\n        const req = await axios.get(\n          `${API_URL}/api/blacklist/get?id=${args.id}`,\n          {\n            headers: {\n              Authorization: `Bearer ${API_TOKEN}`,\n            },\n          }\n        );\n\n        if (req.status === 200)\n          progressMessage.edit({\n            content: req.data\n              ? `**[${req.data.type}]** *\\`${\n                  req.data.id\n                }\\`* has an active blacklist added by *\\`${\n                  req.data.addedBy\n                }\\`* on <t:${Math.round(\n                  new Date(req.data.createdAt).getTime() / 1000\n                )}:F> for ***\\`${req.data.reason}\\`***`\n              : \"There is no active blacklist for this ID\",\n          });\n        else\n          progressMessage.edit({\n            content: `Action failed: ${req.data?.message}`,\n          });\n      } catch (error) {\n        progressMessage.edit({\n          content: `Action failed: ${getAxiosErrorMessage(error)}`,\n        });\n      }\n    } else if (args.action === \"history\") {\n      const progressMessage = await message.reply({\n        content: \"Fetching.....\",\n      });\n\n      try {\n        const req = await axios.get(\n          `${API_URL}/api/blacklist/history?id=${args.id}`,\n          {\n            headers: {\n              Authorization: `Bearer ${API_TOKEN}`,\n            },\n          }\n        );\n\n        if (req.status === 200)\n          progressMessage.edit({\n            content: req.data.length\n              ? `**[${req.data[0].type}]** *\\`${req.data[0].id}\\`* blacklist history:\\n` +\n                req.data\n                  .reverse()\n                  .map(\n                    (\n                      d: {\n                        type: \"server\" | \"user\";\n                        id: string;\n                        reason: string;\n                        addedBy: string;\n                        createdAt: Date;\n                        deactivatedAt: Date | null;\n                      },\n                      i: number\n                    ) =>\n                      `${i + 1}. ${\n                        d.deactivatedAt\n                          ? `*[Deactivated <t:${Math.round(\n                              new Date(d.deactivatedAt).getTime() / 1000\n                            )}:f>]* `\n                          : \"\"\n                      }Blacklist added by *\\`${d.addedBy}\\`* on <t:${Math.round(\n                        new Date(d.createdAt).getTime() / 1000\n                      )}:f> for ***\\`${d.reason}\\`***`\n                  )\n                  .join(\"\\n\")\n              : \"There is no blacklist history for this ID\",\n          });\n        else\n          progressMessage.edit({\n            content: `Action failed: ${req.data?.message}`,\n          });\n      } catch (error) {\n        progressMessage.edit({\n          content: `Action failed: ${getAxiosErrorMessage(error)}`,\n        });\n      }\n    } else if (args.action === \"remove\") {\n      const progressMessage = await message.reply({\n        content: \"Un-blacklisting.....\",\n      });\n\n      try {\n        const req = await axios.delete(\n          `${API_URL}/api/blacklist/delete?id=${args.id}`,\n          {\n            headers: {\n              Authorization: `Bearer ${API_TOKEN}`,\n            },\n          }\n        );\n\n        if (req.status === 200) {\n          progressMessage.edit({\n            content: `${args.id} removed from blacklist`,\n          });\n          postToWebhook(WebhookTypes.BlacklistLog, {\n            content: `**\\`${args.id}\\`** removed from blacklist by *\\`${message.author.id}\\`*`,\n            avatar_url: client.user?.avatarURL()!,\n            username: client.user?.username,\n          });\n        } else\n          progressMessage.edit({\n            content: `Action failed: ${req.data?.message}`,\n          });\n      } catch (error) {\n        progressMessage.edit({\n          content: `Action failed: ${getAxiosErrorMessage(error)}`,\n        });\n      }\n    }\n  },\n};\n\nexport default command;\n"],"names":[],"mappings":"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","debug_id":"bcbd76e8-3b82-5c18-a540-c495ae928fb9"}