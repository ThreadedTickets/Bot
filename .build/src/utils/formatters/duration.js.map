{"version":3,"file":"duration.js","sources":["src/utils/formatters/duration.ts"],"sourceRoot":"/","sourcesContent":["import logger from \"../logger\";\n\nexport function formatDuration(ms: number): string {\n  const seconds = Math.floor(ms / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n  const parts: string[] = [];\n  if (days > 0) parts.push(`${days}d`);\n  if (hours % 24 > 0) parts.push(`${hours % 24}h`);\n  if (minutes % 60 > 0) parts.push(`${minutes % 60}m`);\n  if (seconds % 60 > 0 || parts.length === 0) parts.push(`${seconds % 60}s`);\n  return parts.join(\" \");\n}\n\nexport function parseDurationToMs(\n  input: string,\n  throwOnInvalid: boolean = false\n) {\n  if (!input || typeof input !== \"string\") {\n    logger.warn(`Invalid duration input, returned 60s: ${input}`);\n    return 60 * 1000;\n  }\n\n  const units = {\n    ms: [\"ms\", \"msec\", \"msecs\", \"millisecond\", \"milliseconds\"],\n    s: [\"s\", \"sec\", \"secs\", \"second\", \"seconds\"],\n    m: [\"m\", \"min\", \"mins\", \"minute\", \"minutes\"],\n    h: [\"h\", \"hr\", \"hrs\", \"hour\", \"hours\"],\n    d: [\"d\", \"day\", \"days\"],\n    w: [\"w\", \"week\", \"weeks\"],\n    M: [\"M\", \"month\", \"months\"],\n    y: [\"y\", \"yr\", \"yrs\", \"year\", \"years\"],\n  };\n\n  const multipliers = {\n    ms: 1,\n    s: 1000,\n    m: 60 * 1000,\n    h: 60 * 60 * 1000,\n    d: 24 * 60 * 60 * 1000,\n    w: 7 * 24 * 60 * 60 * 1000,\n    M: 30 * 24 * 60 * 60 * 1000,\n    y: 365 * 24 * 60 * 60 * 1000,\n  };\n\n  const unitPatterns = Object.values(units)\n    .flat()\n    .map((u) => u.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"))\n    .join(\"|\");\n\n  const regex = new RegExp(`(\\\\d+(?:\\\\.\\\\d+)?)\\\\s*(${unitPatterns})`, \"gi\");\n\n  let totalMs = 0;\n  let matchedAny = false;\n\n  let match;\n  while ((match = regex.exec(input)) !== null) {\n    matchedAny = true;\n    const value = parseFloat(match[1]);\n    const unitStr = match[2].toLowerCase();\n\n    let multiplier = null;\n    for (const [key, synonyms] of Object.entries(units)) {\n      if (synonyms.includes(unitStr)) {\n        multiplier = multipliers[key as keyof typeof units];\n        break;\n      }\n    }\n\n    if (multiplier === null) {\n      logger.error(`Unknown time unit in parsing duration: ${unitStr}`);\n      if (throwOnInvalid) throw new Error(`Unknown time unit: ${unitStr}`);\n      continue;\n    }\n\n    const added = value * multiplier;\n    totalMs += added;\n  }\n\n  // Look for bare numbers left after removing parsed patterns\n  const stripped = input.replace(regex, \"\").trim();\n  const bareNumberMatch = stripped.match(/^\\d+(?:\\.\\d+)?$/);\n  if (bareNumberMatch) {\n    const fallbackValue = parseFloat(bareNumberMatch[0]);\n    const fallbackMs = fallbackValue * multipliers.m;\n    logger.debug(\n      `Defaulted bare value \"${fallbackValue}\" to minutes = ${fallbackMs}ms when parsing duration`\n    );\n    totalMs += fallbackMs;\n  } else if (!matchedAny) {\n    logger.debug(\n      `No valid duration parts found when parsing duration: \"${input}\"`\n    );\n    if (throwOnInvalid) throw new Error(`Invalid duration string: \"${input}\"`);\n  }\n\n  logger.debug(`Total duration parsed: ${totalMs}ms`);\n  return totalMs;\n}\n"],"names":[],"mappings":"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","debug_id":"3ae851fa-1ec3-504a-a2f7-818b2cd0b47a"}