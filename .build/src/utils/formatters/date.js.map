{"version":3,"file":"date.js","sources":["src/utils/formatters/date.ts"],"sourceRoot":"/","sourcesContent":["/**\r\n * @param dateInput The date to format\r\n * @param format The format to put it in\r\n *\r\n * Tokens:\r\n *\r\n * `YYYY` -> 2025   (Full year)\r\n *\r\n * `YY`   -> 25     (Short year)\r\n *\r\n * `MMMM` -> March  (Full month)\r\n *\r\n * `MMM`  -> Mar    (Short month)\r\n *\r\n * `MM`   -> 04     (Number month)\r\n *\r\n * `M`    -> 4      (Number month)\r\n *\r\n * `DD`   -> 09     (Day of month)\r\n *\r\n * `D`    -> 9      (Day of month)\r\n *\r\n * `dddd` -> Monday (Full weekday)\r\n *\r\n * `ddd`  -> Mon    (Short weekday)\r\n *\r\n * `hh`   -> 02     (12 hour)\r\n *\r\n * `h`    -> 2      (12 hour)\r\n *\r\n * `HH`   -> 14     (24 hour)\r\n *\r\n * `H`    -> 14     (24 hour)\r\n *\r\n * `mm`   -> 05     (minute)\r\n *\r\n * `m`    -> 5      (minute)\r\n *\r\n * `ss`   -> 09     (second)\r\n *\r\n * `s`    -> 9      (second)\r\n *\r\n * `A`    -> PM     (AM/PM)\r\n *\r\n * `a`    -> pm     (am/pm)\r\n */\r\nexport const formatDate = (\r\n  dateInput: Date | string | number,\r\n  format: string\r\n): string => {\r\n  const date = new Date(dateInput);\r\n\r\n  const daysShort = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  const daysFull = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  const monthsShort = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const dayOfWeek = date.getDay();\r\n  const hours24 = date.getHours();\r\n  const hours12 = hours24 % 12 || 12;\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  const isPM = hours24 >= 12;\r\n\r\n  const pad = (n: number) => n.toString().padStart(2, \"0\");\r\n\r\n  return format\r\n    .replace(/YYYY/g, year.toString())\r\n    .replace(/YY/g, year.toString().slice(-2))\r\n    .replace(/MMM/g, monthsShort[month - 1])\r\n    .replace(/MMMM/g, months[month - 1])\r\n    .replace(/MM/g, pad(month))\r\n    .replace(/M/g, month.toString())\r\n    .replace(/DD/g, pad(day))\r\n    .replace(/D/g, day.toString())\r\n    .replace(/dddd/g, daysFull[dayOfWeek])\r\n    .replace(/ddd/g, daysShort[dayOfWeek])\r\n    .replace(/hh/g, pad(hours12))\r\n    .replace(/h/g, hours12.toString())\r\n    .replace(/HH/g, pad(hours24))\r\n    .replace(/H/g, hours24.toString())\r\n    .replace(/mm/g, pad(minutes))\r\n    .replace(/m/g, minutes.toString())\r\n    .replace(/ss/g, pad(seconds))\r\n    .replace(/s/g, seconds.toString())\r\n    .replace(/A/g, isPM ? \"PM\" : \"AM\")\r\n    .replace(/a/g, isPM ? \"pm\" : \"am\");\r\n};\r\n"],"names":[],"mappings":"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","debug_id":"0595f5a6-4d7f-5c5b-816e-9aa534067c6a"}