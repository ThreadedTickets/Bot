{"version":3,"file":"updateCache.js","sources":["src/utils/database/updateCache.ts"],"sourceRoot":"/","sourcesContent":["import logger from \"../logger\";\r\nimport redis from \"../redis\";\r\n\r\n/**\r\n * Update cached data in Redis by recomputing it.\r\n *\r\n * @param key The Redis key to update\r\n * @param ttl The time to cache the result for in seconds\r\n * @param data The new data\r\n * @returns True if the data was successfully cached, otherwise false\r\n */\r\nexport const updateCachedData = async (\r\n  key: string,\r\n  ttl: number,\r\n  data: any\r\n): Promise<boolean> => {\r\n  try {\r\n    await redis.set(key, JSON.stringify(data), \"EX\", ttl);\r\n    return true;\r\n  } catch (error) {\r\n    logger.error(\"Cache update error\", error);\r\n    return false;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AAAA,uDAA+B;AAC/B,qDAA6B;AAE7B;;;;;;;GAOG;AACI,MAAM,gBAAgB,GAAG,KAAK,EACnC,GAAW,EACX,GAAW,EACX,IAAS,EACS,EAAE;IACpB,IAAI,CAAC;QACH,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC;IACd,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAC1C,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC,CAAC;AAZW,QAAA,gBAAgB,oBAY3B","debug_id":"364d3197-19b0-5f9b-953b-37de80005671"}