{"version":3,"file":"getCachedElse.js","sources":["src/utils/database/getCachedElse.ts"],"sourceRoot":"/","sourcesContent":["import mongoose from \"mongoose\";\r\nimport { cacheHits, cacheMisses, databaseRequests } from \"../../metricsServer\";\r\nimport redis from \"../redis\";\r\n\r\n/**\r\n * Get cached data from Redis or compute and cache it if not found.\r\n */\r\nexport const getCachedDataElse = async <T>(\r\n  key: string,\r\n  ttl: number,\r\n  functionIfNotFound: () => Promise<T>,\r\n  hydrateModel?: mongoose.Model<any>\r\n): Promise<{ cached: boolean; data: any }> => {\r\n  databaseRequests.inc();\r\n\r\n  const cached = await redis.get(key);\r\n  if (cached) {\r\n    try {\r\n      const parsed = JSON.parse(cached);\r\n      cacheHits.inc();\r\n\r\n      if (parsed === null) {\r\n        return { cached: true, data: null };\r\n      }\r\n\r\n      const data = hydrateModel ? hydrateModel.hydrate(parsed) : parsed;\r\n      return { cached: true, data };\r\n    } catch (e) {\r\n      console.warn(`Failed to parse cached data for key \"${key}\":`, e);\r\n      await redis.del(key);\r\n    }\r\n  }\r\n\r\n  const functionResult = await functionIfNotFound();\r\n\r\n  if (functionResult !== undefined) {\r\n    await redis.set(key, JSON.stringify(functionResult), \"EX\", ttl);\r\n  }\r\n\r\n  cacheMisses.inc();\r\n  return {\r\n    cached: false,\r\n    data: functionResult,\r\n  };\r\n};\r\n\r\n/**\r\n * Get cached data only, no fallback logic.\r\n */\r\nexport const getCache = async (\r\n  key: string,\r\n  hydrateModel?: mongoose.Model<any>\r\n): Promise<{ cached: boolean; data: any }> => {\r\n  const cached = await redis.get(key);\r\n  if (cached) {\r\n    try {\r\n      const parsed = JSON.parse(cached);\r\n      cacheHits.inc();\r\n\r\n      if (parsed === null) {\r\n        return { cached: true, data: null };\r\n      }\r\n\r\n      const data = hydrateModel ? hydrateModel.hydrate(parsed) : parsed;\r\n      return { cached: true, data };\r\n    } catch (e) {\r\n      console.warn(`Failed to parse cache for key \"${key}\":`, e);\r\n      await redis.del(key);\r\n    }\r\n  }\r\n\r\n  return {\r\n    cached: false,\r\n    data: null,\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AACA,uDAA+E;AAC/E,qDAA6B;AAE7B;;GAEG;AACI,MAAM,iBAAiB,GAAG,KAAK,EACpC,GAAW,EACX,GAAW,EACX,kBAAoC,EACpC,YAAkC,EACO,EAAE;IAC3C,gCAAgB,CAAC,GAAG,EAAE,CAAC;IAEvB,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,IAAI,MAAM,EAAE,CAAC;QACX,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAClC,yBAAS,CAAC,GAAG,EAAE,CAAC;YAEhB,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;gBACpB,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACtC,CAAC;YAED,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAClE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAChC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,IAAI,CAAC,wCAAwC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;YACjE,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAED,MAAM,cAAc,GAAG,MAAM,kBAAkB,EAAE,CAAC;IAElD,IAAI,cAAc,KAAK,SAAS,EAAE,CAAC;QACjC,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IAClE,CAAC;IAED,2BAAW,CAAC,GAAG,EAAE,CAAC;IAClB,OAAO;QACL,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,cAAc;KACrB,CAAC;AACJ,CAAC,CAAC;AArCW,QAAA,iBAAiB,qBAqC5B;AAEF;;GAEG;AACI,MAAM,QAAQ,GAAG,KAAK,EAC3B,GAAW,EACX,YAAkC,EACO,EAAE;IAC3C,MAAM,MAAM,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,IAAI,MAAM,EAAE,CAAC;QACX,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAClC,yBAAS,CAAC,GAAG,EAAE,CAAC;YAEhB,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;gBACpB,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACtC,CAAC;YAED,MAAM,IAAI,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YAClE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAChC,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACX,OAAO,CAAC,IAAI,CAAC,kCAAkC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;YAC3D,MAAM,eAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAED,OAAO;QACL,MAAM,EAAE,KAAK;QACb,IAAI,EAAE,IAAI;KACX,CAAC;AACJ,CAAC,CAAC;AA1BW,QAAA,QAAQ,YA0BnB","debug_id":"4babf7c7-0a0d-5d32-a10c-936b27a75f2e"}