{"version":3,"file":"argumentParser.js","sources":["src/utils/commands/message/argumentParser.ts"],"sourceRoot":"/","sourcesContent":["import { ArgSpec, ArgType } from \"../../../types/Command\";\r\n\r\nconst parseUsage = (usage: string): ArgSpec[] => {\r\n  const regex =\r\n    /(\\[|<)([^\\]<>\\[\\]:+={}]+)(?:\\{([^}]+)\\})?(?:=(.*?))?(?:<(\\w+)>)?(?::\\(([^)]+)\\))?(\\+)?(\\]|>)/g;\r\n\r\n  const args: ArgSpec[] = [];\r\n\r\n  let match: RegExpExecArray | null;\r\n  while ((match = regex.exec(usage)) !== null) {\r\n    const [\r\n      _,\r\n      open,\r\n      name,\r\n      condition,\r\n      defaultValue,\r\n      type = \"string\",\r\n      choices,\r\n      rest,\r\n      close,\r\n    ] = match;\r\n\r\n    args.push({\r\n      name,\r\n      type: type as ArgType,\r\n      optional: open === \"[\",\r\n      choices: choices ? choices.split(\"|\") : undefined,\r\n      rest: !!rest,\r\n      condition,\r\n      default: defaultValue,\r\n    });\r\n  }\r\n\r\n  return args;\r\n};\r\n\r\n// Function to parse the input arguments based on the command usage\r\nexport const parseArgs = (\r\n  usage: string,\r\n  input: string\r\n): {\r\n  args: Record<string, any>;\r\n  error?: string;\r\n  code?: number;\r\n  context?: any;\r\n} => {\r\n  const specs = parseUsage(usage);\r\n  const tokens = input.trim().split(/ +/);\r\n  const result: Record<string, any> = {};\r\n\r\n  let index = 0;\r\n\r\n  const evaluateCondition = (\r\n    condition: string,\r\n    context: Record<string, any>\r\n  ): boolean => {\r\n    try {\r\n      return new Function(\"context\", `with (context) { return ${condition}; }`)(\r\n        context\r\n      );\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  for (const spec of specs) {\r\n    const shouldInclude = spec.condition\r\n      ? evaluateCondition(spec.condition, result)\r\n      : true;\r\n\r\n    if (!shouldInclude) continue;\r\n\r\n    const token = tokens[index];\r\n\r\n    if (token === undefined || token === \"\") {\r\n      if (spec.default !== undefined) {\r\n        result[spec.name] =\r\n          spec.type === \"number\" ? Number(spec.default) : spec.default;\r\n        continue;\r\n      }\r\n\r\n      if (!spec.optional) {\r\n        return {\r\n          args: result,\r\n          code: 0,\r\n          error: `Missing required argument`,\r\n          context: { missing: spec.name },\r\n        };\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    const raw = spec.rest ? tokens.slice(index).join(\" \") : token;\r\n    let value: any = raw;\r\n\r\n    if (spec.type === \"number\") {\r\n      value = Number(raw);\r\n      if (isNaN(value)) {\r\n        return {\r\n          args: result,\r\n          code: 1,\r\n          error: `Invalid type`,\r\n          context: { arg: spec.name, expected: \"number\", received: raw },\r\n        };\r\n      }\r\n    }\r\n\r\n    if (spec.type === \"boolean\") {\r\n      value = raw.toLowerCase();\r\n      if (value === \"0\") value = false;\r\n      else if (value === \"1\") value = true;\r\n      else if (value === \"n\") value = false;\r\n      else if (value === \"y\") value = true;\r\n      else if (value === \"no\") value = false;\r\n      else if (value === \"yes\") value = true;\r\n      else if (value === \"f\") value = false;\r\n      else if (value === \"t\") value = true;\r\n      else if (value === \"false\") value = false;\r\n      else if (value === \"t\") value = true;\r\n\r\n      if (typeof value !== \"boolean\")\r\n        return {\r\n          args: result,\r\n          code: 1,\r\n          error: `Invalid type`,\r\n          context: { arg: spec.name, expected: \"boolean\", received: raw },\r\n        };\r\n    }\r\n\r\n    if (spec.choices && !spec.choices.includes(String(value))) {\r\n      return {\r\n        args: result,\r\n        code: 2,\r\n        error: `Invalid choice`,\r\n        context: { arg: spec.name, received: value, options: spec.choices },\r\n      };\r\n    }\r\n\r\n    result[spec.name] = value;\r\n    index += spec.rest ? tokens.length : 1;\r\n  }\r\n\r\n  if (index > 0 && index < tokens.length) {\r\n    return {\r\n      args: result,\r\n      code: 3,\r\n      error: `Too many arguments`,\r\n      context: {\r\n        extra: tokens.slice(index),\r\n        received: tokens.length,\r\n        expected: index,\r\n      },\r\n    };\r\n  }\r\n\r\n  return { args: result };\r\n};\r\n"],"names":[],"mappings":"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","debug_id":"1a001519-9679-5199-b974-f99d53452774"}