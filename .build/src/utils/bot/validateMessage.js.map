{"version":3,"file":"validateMessage.js","sources":["src/utils/bot/validateMessage.ts"],"sourceRoot":"/","sourcesContent":["type Message = {\n  content: string;\n  embeds: any[];\n  attachments: any[];\n  components: any[];\n};\n\ntype ValidationError = {\n  type: string;\n  message: string;\n};\n\nexport function validateDiscordMessage(message: Message): ValidationError[] {\n  const errors: ValidationError[] = [];\n\n  // Content validation\n  if (\n    !message.content &&\n    message.embeds.length === 0 &&\n    message.attachments.length === 0\n  ) {\n    errors.push({\n      type: \"content\",\n      message: \"Message must contain content, an embed, or an attachment.\",\n    });\n  }\n\n  if (message.content.length > 2000) {\n    errors.push({\n      type: \"content\",\n      message: `Message content exceeds 2000 characters (${message.content.length}).`,\n    });\n  }\n\n  // Embed validation\n  if (message.embeds.length > 10) {\n    errors.push({\n      type: \"embed\",\n      message: \"Cannot include more than 10 embeds in a single message.\",\n    });\n  }\n\n  for (let i = 0; i < message.embeds.length; i++) {\n    const embed = message.embeds[i];\n    const indexLabel = `Embed #${i + 1}`;\n\n    if (embed.title && embed.title.length > 256) {\n      errors.push({\n        type: \"embed\",\n        message: `${indexLabel} title exceeds 256 characters.`,\n      });\n    }\n\n    if (embed.description && embed.description.length > 4096) {\n      errors.push({\n        type: \"embed\",\n        message: `${indexLabel} description exceeds 4096 characters.`,\n      });\n    }\n\n    if (embed.fields?.length > 25) {\n      errors.push({\n        type: \"embed\",\n        message: `${indexLabel} has more than 25 fields.`,\n      });\n    }\n\n    embed.fields?.forEach((field: any, j: number) => {\n      if (field.name.length > 256 || field.value.length > 1024) {\n        errors.push({\n          type: \"embed\",\n          message: `${indexLabel} field #${\n            j + 1\n          } has a name or value that is too long.`,\n        });\n      }\n    });\n\n    if (embed.footer?.text?.length > 2048) {\n      errors.push({\n        type: \"embed\",\n        message: `${indexLabel} footer text exceeds 2048 characters.`,\n      });\n    }\n\n    if (embed.author?.name?.length > 256) {\n      errors.push({\n        type: \"embed\",\n        message: `${indexLabel} author name exceeds 256 characters.`,\n      });\n    }\n  }\n\n  // Attachment validation\n  if (message.attachments.length > 10) {\n    errors.push({\n      type: \"attachment\",\n      message: \"Cannot include more than 10 attachments in a message.\",\n    });\n  }\n\n  // Components validation could be added here if you use buttons, selects, etc.\n\n  return errors;\n}\n"],"names":[],"mappings":"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","debug_id":"f6c706be-d0c7-5e00-b91b-40bf86a62b3b"}