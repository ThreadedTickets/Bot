{"version":3,"file":"fetchMessage.js","sources":["src/utils/bot/fetchMessage.ts"],"sourceRoot":"/","sourcesContent":["import { Channel, Client, Message } from \"discord.js\";\nimport logger from \"../logger\";\n\n/**\n * Fetches a message from a Discord message URL.\n * @param client - The Discord Client instance.\n * @param url - The full Discord message URL.\n * @returns The fetched message, or null if not found or invalid.\n */\nexport async function fetchMessageFromUrl(\n  client: Client,\n  url: string\n): Promise<Message | null> {\n  const match = url.match(\n    /https:\\/\\/(?:canary\\.|ptb\\.)?discord\\.com\\/channels\\/(\\d+)\\/(\\d+)\\/(\\d+)/\n  );\n\n  if (!match) {\n    logger.error(\"Invalid Discord message URL\", { url: url });\n    return null;\n  }\n\n  const [, guildId, channelId, messageId] = match;\n\n  try {\n    const channel = await client.channels.fetch(channelId);\n    if (!channel?.isTextBased()) return null;\n\n    const message = await channel.messages.fetch(messageId);\n    return message;\n  } catch (err) {\n    logger.error(\"Failed to fetch message:\", err);\n    return null;\n  }\n}\n\nexport async function fetchChannelById(\n  client: Client,\n  channelId: string | null\n): Promise<Channel | null> {\n  if (!channelId) return null;\n  try {\n    const channel = await client.channels.fetch(channelId);\n    return channel ?? null;\n  } catch (err) {\n    return null; // Handle invalid ID, missing permissions, or deleted channels\n  }\n}\n\nexport async function fetchGuildById(client: Client, guildId: string) {\n  try {\n    const guild = await client.guilds.fetch(guildId);\n    return guild; // This is a Guild object\n  } catch (error) {\n    logger.error(`Failed to fetch guild`, error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;;AASA,kDAyBC;AAED,4CAWC;AAED,wCAQC;AAxDD,uDAA+B;AAE/B;;;;;GAKG;AACI,KAAK,UAAU,mBAAmB,CACvC,MAAc,EACd,GAAW;IAEX,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CACrB,0EAA0E,CAC3E,CAAC;IAEF,IAAI,CAAC,KAAK,EAAE,CAAC;QACX,gBAAM,CAAC,KAAK,CAAC,6BAA6B,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC;IAEhD,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,EAAE,WAAW,EAAE;YAAE,OAAO,IAAI,CAAC;QAEzC,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACxD,OAAO,OAAO,CAAC;IACjB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,gBAAM,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,gBAAgB,CACpC,MAAc,EACd,SAAwB;IAExB,IAAI,CAAC,SAAS;QAAE,OAAO,IAAI,CAAC;IAC5B,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvD,OAAO,OAAO,IAAI,IAAI,CAAC;IACzB,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,IAAI,CAAC,CAAC,8DAA8D;IAC7E,CAAC;AACH,CAAC;AAEM,KAAK,UAAU,cAAc,CAAC,MAAc,EAAE,OAAe;IAClE,IAAI,CAAC;QACH,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACjD,OAAO,KAAK,CAAC,CAAC,yBAAyB;IACzC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,gBAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC","debug_id":"15556310-8901-59af-b6c6-221ca4e2d83f"}