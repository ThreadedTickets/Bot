{"version":3,"file":"confirmDM.js","sources":["src/utils/hooks/events/applications/confirmDM.ts"],"sourceRoot":"/","sourcesContent":["import {\n  ActionRowBuilder,\n  ButtonBuilder,\n  ButtonStyle,\n  Guild,\n  User,\n} from \"discord.js\";\nimport { registerHook } from \"../../index\";\nimport colours from \"../../../../constants/colours\";\nimport { Locale } from \"../../../../types/Locale\";\nimport { t } from \"../../../../lang\";\nimport serverMessageToDiscordMessage from \"../../../formatters/serverMessageToDiscordMessage\";\nimport { getServerMessage } from \"../../../bot/getServer\";\nimport { Application } from \"../../../../types/Application\";\nimport { resolveDiscordMessagePlaceholders } from \"../../../message/placeholders/resolvePlaceholders\";\nimport { generateBasePlaceholderContext } from \"../../../message/placeholders/generateBaseContext\";\n\nregisterHook(\n  \"ApplicationStart\",\n  async ({\n    application,\n    user,\n    lang,\n    server,\n  }: {\n    application: Application;\n    user: User;\n    lang: Locale;\n    server: Guild;\n  }) => {\n    let startConfirmationMessage = null;\n    if (application.confirmationMessage) {\n      const customConfirmationMessage = await getServerMessage(\n        application.confirmationMessage,\n        server.id\n      );\n      if (customConfirmationMessage)\n        startConfirmationMessage = serverMessageToDiscordMessage(\n          customConfirmationMessage\n        );\n    }\n    if (!startConfirmationMessage)\n      startConfirmationMessage = {\n        embeds: [\n          {\n            color: parseInt(colours.primary, 16),\n            description: t(lang, \"APPLICATION_DEFAULT_MESSAGE_CONFIRMATION\"),\n          },\n        ],\n      };\n\n    user.send({\n      ...resolveDiscordMessagePlaceholders(startConfirmationMessage, {\n        ...generateBasePlaceholderContext({ server, user: user }),\n        applicationName: application.name,\n      }),\n      components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n          new ButtonBuilder()\n            .setCustomId(`startApp:${application._id}:${server.id}`)\n            .setLabel(\"Start\")\n            .setStyle(ButtonStyle.Success),\n\n          new ButtonBuilder()\n            .setCustomId(`cancelApp:${application._id}:${server.id}`)\n            .setLabel(\"Cancel\")\n            .setStyle(ButtonStyle.Danger)\n        ),\n      ],\n    });\n  }\n);\n"],"names":[],"mappings":";;;;;;;AAAA,2CAMoB;AACpB,uCAA2C;AAC3C,4EAAoD;AAEpD,2CAAqC;AACrC,sHAA8F;AAC9F,sDAA0D;AAE1D,2FAAsG;AACtG,2FAAmG;AAEnG,IAAA,oBAAY,EACV,kBAAkB,EAClB,KAAK,EAAE,EACL,WAAW,EACX,IAAI,EACJ,IAAI,EACJ,MAAM,GAMP,EAAE,EAAE;IACH,IAAI,wBAAwB,GAAG,IAAI,CAAC;IACpC,IAAI,WAAW,CAAC,mBAAmB,EAAE,CAAC;QACpC,MAAM,yBAAyB,GAAG,MAAM,IAAA,4BAAgB,EACtD,WAAW,CAAC,mBAAmB,EAC/B,MAAM,CAAC,EAAE,CACV,CAAC;QACF,IAAI,yBAAyB;YAC3B,wBAAwB,GAAG,IAAA,uCAA6B,EACtD,yBAAyB,CAC1B,CAAC;IACN,CAAC;IACD,IAAI,CAAC,wBAAwB;QAC3B,wBAAwB,GAAG;YACzB,MAAM,EAAE;gBACN;oBACE,KAAK,EAAE,QAAQ,CAAC,iBAAO,CAAC,OAAO,EAAE,EAAE,CAAC;oBACpC,WAAW,EAAE,IAAA,QAAC,EAAC,IAAI,EAAE,0CAA0C,CAAC;iBACjE;aACF;SACF,CAAC;IAEJ,IAAI,CAAC,IAAI,CAAC;QACR,GAAG,IAAA,uDAAiC,EAAC,wBAAwB,EAAE;YAC7D,GAAG,IAAA,oDAA8B,EAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;YACzD,eAAe,EAAE,WAAW,CAAC,IAAI;SAClC,CAAC;QACF,UAAU,EAAE;YACV,IAAI,6BAAgB,EAAiB,CAAC,aAAa,CACjD,IAAI,0BAAa,EAAE;iBAChB,WAAW,CAAC,YAAY,WAAW,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,CAAC;iBACvD,QAAQ,CAAC,OAAO,CAAC;iBACjB,QAAQ,CAAC,wBAAW,CAAC,OAAO,CAAC,EAEhC,IAAI,0BAAa,EAAE;iBAChB,WAAW,CAAC,aAAa,WAAW,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,CAAC;iBACxD,QAAQ,CAAC,QAAQ,CAAC;iBAClB,QAAQ,CAAC,wBAAW,CAAC,MAAM,CAAC,CAChC;SACF;KACF,CAAC,CAAC;AACL,CAAC,CACF,CAAC","debug_id":"9633b6f5-ee86-5c6a-9c78-02f2e93b0296"}