{"version":3,"file":"lock.js","sources":["src/utils/tickets/lock.ts"],"sourceRoot":"/","sourcesContent":["import {\n  ActionRowBuilder,\n  ButtonBuilder,\n  ButtonInteraction,\n  ButtonStyle,\n  ChatInputCommandInteraction,\n  Message,\n  TextChannel,\n} from \"discord.js\";\nimport { client } from \"../..\";\nimport { t } from \"../../lang\";\nimport { Locale } from \"../../types/Locale\";\nimport {\n  getServer,\n  getServerGroupsByIds,\n  getTicketTrust,\n} from \"../bot/getServer\";\nimport {\n  getAvailableLogChannel,\n  postLogToWebhook,\n} from \"../bot/sendLogToWebhook\";\nimport colours from \"../../constants/colours\";\nimport { fetchChannelById } from \"../bot/fetchMessage\";\nimport { onError } from \"../onError\";\nimport { buildChannelPermissionOverwrites } from \"../hooks/events/tickets/new/main\";\nimport ticketOwnerPermissionsClosed from \"../../constants/ticketOwnerPermissionsClosed\";\nimport everyoneTicketPermissions from \"../../constants/everyoneTicketPermissions\";\nimport botTicketPermissions from \"../../constants/botTicketPermissions\";\nimport { TicketSchema } from \"../../database/modals/Ticket\";\nimport { invalidateCache } from \"../database/invalidateCache\";\nimport logger from \"../logger\";\n\nexport async function lockTicket(\n  ticketId: string,\n  locale: Locale,\n  repliable: ButtonInteraction | ChatInputCommandInteraction | Message\n) {\n  const ticket = await getTicketTrust(ticketId);\n  if (!ticket)\n    return \"editReply\" in repliable\n      ? repliable?.editReply(\n          (\n            await onError(new Error(\"Could not find ticket\"), {\n              ticketId: ticketId,\n            })\n          ).discordMsg\n        )\n      : repliable?.edit(\n          (\n            await onError(new Error(\"Could not find ticket\"), {\n              ticketId: ticketId,\n            })\n          ).discordMsg\n        );\n\n  if (ticket.status === \"Closed\")\n    return \"editReply\" in repliable\n      ? repliable?.editReply(t(locale, \"TICKET_CLOSED_SO_CANNOT_LOCK\"))\n      : repliable?.edit(t(locale, \"TICKET_CLOSED_SO_CANNOT_LOCK\"));\n  if (ticket.status === \"Locked\")\n    return \"editReply\" in repliable\n      ? repliable?.editReply(t(locale, \"TICKET_LOCKED_SO_CANNOT_LOCK\"))\n      : repliable?.edit(t(locale, \"TICKET_LOCKED_SO_CANNOT_LOCK\"));\n\n  await TicketSchema.findOneAndUpdate({ _id: ticketId }, { status: \"Locked\" });\n  await invalidateCache(`ticket:${ticketId}`);\n  await invalidateCache(`ticketTrust:${ticketId}`);\n  invalidateCache(`tickets:${ticket.server}:${ticket.owner}:Open`);\n  invalidateCache(`tickets:${ticket.server}:Open`);\n\n  const ticketChannel = await fetchChannelById(client, ticket.channel);\n\n  const server = await getServer(ticket.server);\n  const logChannel = getAvailableLogChannel(\n    server.settings.logging,\n    \"tickets.lock\"\n  );\n  if (logChannel)\n    await postLogToWebhook(\n      client,\n      {\n        channel: logChannel.channel!,\n        enabled: logChannel.enabled,\n        webhook: logChannel.webhook!,\n      },\n      {\n        embeds: [\n          {\n            color: parseInt(colours.info, 16),\n            title: t(server.preferredLanguage, \"TICKET_LOCK_LOG_TITLE\"),\n            description: t(server.preferredLanguage, `TICKET_LOCK_LOG_BODY`, {\n              user: `<@${ticket.owner}>`,\n            }),\n          },\n        ],\n      }\n    );\n\n  if (!ticketChannel?.isThread()) {\n    await (ticketChannel as TextChannel)\n      .edit({\n        permissionOverwrites: buildChannelPermissionOverwrites(\n          await getServerGroupsByIds(ticket.groups, ticket.server),\n          ticket.server,\n          { id: ticket.owner, ...ticketOwnerPermissionsClosed },\n          everyoneTicketPermissions,\n          { id: client.user!.id, ...botTicketPermissions }\n        ),\n      })\n      .catch((err) =>\n        logger.warn(`Failed to edit ticket channel on lock`, err)\n      );\n  } else if (ticketChannel.isThread()) {\n    await ticketChannel.members\n      .remove(ticket.owner)\n      .catch((err) =>\n        logger.warn(`Failed to remove ticket owner on lock`, err)\n      );\n  }\n\n  \"editReply\" in repliable\n    ? repliable?.editReply(t(locale, \"TICKET_LOCK\"))\n    : repliable?.edit({\n        content: t(locale, \"TICKET_LOCK\"),\n        components: [\n          new ActionRowBuilder<ButtonBuilder>().setComponents(\n            new ButtonBuilder()\n              .setCustomId(`unlock:${ticketId}`)\n              .setStyle(ButtonStyle.Primary)\n              .setLabel(t(locale, \"TICKET_PIN_MESSAGE_COMPONENTS_UNLOCK\"))\n          ),\n        ],\n      });\n\n  if (ticketChannel?.isTextBased() && \"editReply\" in repliable)\n    (ticketChannel as TextChannel)\n      .send({\n        content: t(locale, \"TICKET_LOCK\"),\n        components: [\n          new ActionRowBuilder<ButtonBuilder>().setComponents(\n            new ButtonBuilder()\n              .setCustomId(`unlock:${ticketId}`)\n              .setStyle(ButtonStyle.Primary)\n              .setLabel(t(locale, \"TICKET_PIN_MESSAGE_COMPONENTS_UNLOCK\"))\n          ),\n        ],\n      })\n      .catch((err) =>\n        logger.warn(`Failed to send message to ticket channel on lock`, err)\n      );\n}\n"],"names":[],"mappings":"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","debug_id":"4f27f9fc-f372-5afb-bf65-ab89c4f96146"}