{"version":3,"file":"render.js","sources":["src/utils/tickets/render.ts"],"sourceRoot":"/","sourcesContent":["import { APIEmbed } from \"discord.js\";\nimport * as fs from \"fs\";\nimport * as readline from \"readline\";\n\ninterface SerializedMessage {\n  messageId: string;\n  userId: string;\n  type: number;\n  content: string;\n  embeds: APIEmbed[];\n  replyTo?: string;\n  edited: boolean;\n  timestamp: string;\n}\n\ninterface UserMetadata {\n  username: string;\n  roleColor?: string;\n  isBot: boolean;\n}\n\ninterface TranscriptMetadata {\n  name?: string;\n  channels?: Record<string, string>;\n  users?: Record<string, string>;\n  roles?: Record<string, string>;\n}\n\nfunction escapeHtml(text: string) {\n  return text\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\nfunction replaceMentions(\n  content: string,\n  metadata: TranscriptMetadata,\n  fallbackUsers: Record<string, UserMetadata>\n): string {\n  if (!content) return \"\";\n\n  // Replace user mentions: <@123456789> or <@!123456789>\n  content = content.replace(/&lt;@!?(\\d+)&gt;/g, (_, userId) => {\n    const username =\n      metadata.users?.[userId] ||\n      fallbackUsers[userId]?.username ||\n      \"Unknown User\";\n    return `<span class=\"mention user-mention\">@${username}</span>`;\n  });\n\n  // Replace channel mentions: <#123456789>\n  content = content.replace(/&lt;#(\\d+)&gt;/g, (_, channelId) => {\n    const channelName = metadata.channels?.[channelId] || \"unknown-channel\";\n    return `<span class=\"mention channel-mention\">#${channelName}</span>`;\n  });\n\n  // Replace role mentions: <@&123456789>\n  content = content.replace(/&lt;@&(\\d+)&gt;/g, (_, roleId) => {\n    const roleName = metadata.roles?.[roleId] || \"unknown-role\";\n    return `<span class=\"mention role-mention\">@${roleName}</span>`;\n  });\n\n  return content;\n}\n\nfunction renderEmbed(embed: APIEmbed): string {\n  const escape = escapeHtml;\n\n  const colorBar = embed.color\n    ? `#${embed.color.toString(16).padStart(6, \"0\")}`\n    : \"#4f545c\";\n\n  const author = embed.author\n    ? `<div style=\"display: flex; align-items: center; margin-bottom: 8px; font-size: 14px;\">\n        ${\n          embed.author.icon_url\n            ? `<img src=\"${escape(\n                embed.author.icon_url\n              )}\" alt=\"Author icon\" style=\"width: 20px; height: 20px; border-radius: 50%; margin-right: 8px;\">`\n            : \"\"\n        }\n        ${\n          embed.author.url\n            ? `<a href=\"${escape(\n                embed.author.url\n              )}\" target=\"_blank\" style=\"font-weight: 500; color: #00a8ff; text-decoration: none;\">${escape(\n                embed.author.name\n              )}</a>`\n            : `<span style=\"font-weight: 500;\">${escape(\n                embed.author.name\n              )}</span>`\n        }\n      </div>`\n    : \"\";\n\n  const title = embed.title\n    ? `<div style=\"font-weight: 600; font-size: 16px; margin-bottom: 6px;\">\n        ${\n          embed.url\n            ? `<a href=\"${escape(\n                embed.url\n              )}\" target=\"_blank\" style=\"color: #00a8ff; text-decoration: none;\">${escape(\n                embed.title\n              )}</a>`\n            : escape(embed.title)\n        }\n      </div>`\n    : \"\";\n\n  const description = embed.description\n    ? `<div style=\"margin-bottom: 8px; font-size: 14px; line-height: 1.4; white-space: pre-wrap;\">${escape(\n        embed.description\n      )}</div>`\n    : \"\";\n\n  const fields =\n    Array.isArray(embed.fields) && embed.fields.length > 0\n      ? `<div style=\"display: flex; flex-wrap: wrap; gap: 8px; margin-top: 8px;\">${embed.fields\n          .map((f: any) => {\n            const isInline = f.inline ?? false;\n            return `<div style=\"flex: ${\n              isInline ? \"1 1 45%\" : \"1 1 100%\"\n            }; min-width: 200px;\">\n              <div style=\"font-weight: 500; font-size: 13px;\">${escape(\n                f.name\n              )}</div>\n              <div style=\"font-size: 14px; white-space: pre-wrap;\">${escape(\n                f.value\n              )}</div>\n            </div>`;\n          })\n          .join(\"\")}</div>`\n      : \"\";\n\n  const image = embed.image?.url\n    ? `<div style=\"margin-top: 10px;\"><img src=\"${escape(\n        embed.image.url\n      )}\" alt=\"Embed image\" style=\"max-width: 100%; border-radius: 4px;\"></div>`\n    : \"\";\n\n  const thumbnail = embed.thumbnail?.url\n    ? `<div style=\"margin-left: 16px;\">\n        <img src=\"${escape(\n          embed.thumbnail.url\n        )}\" alt=\"Thumbnail\" style=\"width: 80px; height: 80px; object-fit: cover; border-radius: 4px;\">\n      </div>`\n    : \"\";\n\n  const footerText = embed.footer?.text || \"\";\n  const footerIcon = embed.footer?.icon_url\n    ? `<img src=\"${escape(\n        embed.footer.icon_url\n      )}\" alt=\"Footer icon\" style=\"width: 20px; height: 20px; border-radius: 50%; margin-right: 6px;\">`\n    : \"\";\n\n  const timestamp = embed.timestamp\n    ? new Date(embed.timestamp).toLocaleString()\n    : \"\";\n\n  const footer =\n    footerText || timestamp\n      ? `<div style=\"display: flex; align-items: center; font-size: 12px; color: #b9bbbe; margin-top: 12px;\">\n          ${footerIcon}\n          <span>${escape(footerText)}${\n          footerText && timestamp ? \" • \" : \"\"\n        }${timestamp}</span>\n        </div>`\n      : \"\";\n\n  return `<div class=\"embed-wrapper\" style=\"max-width: 520px; margin: 8px 0;\">\n    <div class=\"embed\" style=\"display: flex; border-left: 4px solid ${colorBar}; background: #2f3136; color: #dcddde; padding: 12px; border-radius: 4px; font-family: sans-serif; font-size: 14px;\">\n      <div style=\"flex: 1;\">\n        ${author}\n        ${title}\n        ${description}\n        ${fields}\n        ${image}\n        ${footer}\n      </div>\n      ${thumbnail}\n    </div>\n  </div>`;\n}\n\nexport async function renderTranscriptFromJsonl(\n  jsonlFilePath: string,\n  users: Record<string, UserMetadata>,\n  metadata: {\n    name?: string;\n    users?: Record<string, string>;\n    channels?: Record<string, string>;\n    roles?: Record<string, string>;\n  }\n): Promise<string> {\n  const messages: SerializedMessage[] = [];\n\n  // Read JSONL file line-by-line\n  const fileStream = fs.createReadStream(jsonlFilePath);\n  const rl = readline.createInterface({\n    input: fileStream,\n    crlfDelay: Infinity,\n  });\n\n  for await (const line of rl) {\n    if (line.trim() === \"\") continue;\n    try {\n      const msg: SerializedMessage = JSON.parse(line);\n      messages.push(msg);\n    } catch (e) {\n      console.error(\"Invalid JSON line:\", line);\n    }\n  }\n\n  // Build a map for quick reply lookup\n  const messageMap = new Map<string, SerializedMessage>();\n  for (const msg of messages) {\n    messageMap.set(msg.messageId, msg);\n  }\n\n  // Render HTML header & styles\n  let html = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>Ticket Transcript</title>\n<style>\n      html,\n      body {\n        margin: 0;\n        padding: 0;\n        height: 100%;\n        font-family: Arial, sans-serif;\n        background: #08040c;\n        color: #ddd;\n      }\n\n      body {\n        display: flex;\n        flex-direction: row;\n        height: 100vh;\n        overflow: hidden;\n      }\n\n      .user-list {\n        width: 300px;\n        border-right: 2px solid #444;\n        padding: 10px;\n        box-sizing: border-box;\n        overflow-y: auto;\n      }\n\n      .user-list h2 {\n        font-size: 18px;\n        margin-top: 0;\n      }\n\n      .user-list div {\n        margin-bottom: 6px;\n      }\n\n      .transcript {\n        flex-grow: 1;\n        padding: 10px;\n        box-sizing: border-box;\n        overflow-y: auto;\n      }\n\n      @media (max-width: 768px) {\n        .user-list {\n          display: none;\n        }\n        \n        .transcript {\n          margin-left: 0;\n        }\n      }\n\n\n      .message {\n        padding: 6px 0;\n      }\n\n      .author {\n        font-weight: bold;\n      }\n\n      .timestamp {\n        color: #888;\n        font-size: 0.8em;\n      }\n\n      .reply-snippet {\n        font-style: italic;\n        color: #aaa;\n        font-size: 0.9em;\n        margin-top: 4px;\n        padding-left: 12px;\n        border-left: 2px solid #555;\n      }\n\n      .embed img {\n        display: block;\n        margin-top: 6px;\n        max-width: 100%;\n        border-radius: 6px;\n      }\n\n      .system-message {\n        background: #1f1a28;\n        border-left: 4px solid #a95df0;\n        padding: 8px 12px;\n        margin: 10px 0;\n        font-style: italic;\n        color: #c7bdfc;\n        border-radius: 4px\n      }\n\n      .message.highlight {\n        animation: pulse-bg 1.2s ease;\n      }\n      .mention {\n        display: inline-block;\n        padding: 2px 6px;\n        margin: 0 1px;\n        border-radius: 4px; /* Fully rounded pill shape */\n        font-weight: 500;\n        font-size: 0.95em;\n        cursor: pointer;\n        text-decoration: none;\n      }\n      .user-mention {\n        background-color: #5865f2;\n        color: #fff;\n      }\n\n      .channel-mention {\n        background-color: #4f545c;\n        color: #ddd;\n      }\n\n      .role-mention {\n        background-color: #3ba55d;\n        color: #fff;\n      }\n\n      .mention:hover {\n        opacity: 0.85;\n      }\n\n      @keyframes pulse-bg {\n        0% {\n          background-color: #ffffff22;\n        }\n        50% {\n          background-color: #ffffff44;\n        }\n        100% {\n          background-color: transparent;\n        }\n      }\n    </style>\n</head>\n<body>\n`;\n\n  // User summary: count messages per user\n  const userMessageCount: Record<string, number> = {};\n  for (const msg of messages) {\n    userMessageCount[msg.userId] = (userMessageCount[msg.userId] || 0) + 1;\n  }\n\n  // User list panel\n  html += `<div class=\"user-list\">\n  <div>\n  <p>${escapeHtml(\n    metadata.name ?? \"Unknown\"\n  )}</p><p>Messages: ${messages.length.toLocaleString()}</p></div>\n  <div style=\"margin-top: 6px\"><h2>Users</h2>\n  ${Object.entries(users)\n    .map(([userId, meta]) => {\n      const count = userMessageCount[userId] ?? 0;\n      const colorStyle = meta.roleColor ? `color: ${meta.roleColor}` : \"\";\n      const botLabel = meta.isBot ? \" 🤖\" : \"\";\n      return `<div style=\"${colorStyle}\">${escapeHtml(\n        meta.username\n      )}${botLabel} — ${count} message${count !== 1 ? \"s\" : \"\"}</div>`;\n    })\n    .join(\"\\n\")}</div>\n</div>`;\n\n  // Messages panel\n  html += `<div class=\"transcript\">`;\n\n  for (const msg of messages) {\n    const user = users[msg.userId];\n    const authorName = user ? escapeHtml(user.username) : \"Unknown User\";\n    const authorColor = user?.roleColor || \"#ddd\";\n    const timestamp = new Date(msg.timestamp).toLocaleString();\n\n    html += `<div class=\"message\" id=\"msg-${msg.messageId}\">\n    <div><span class=\"author\" style=\"color: ${authorColor}\">${authorName}</span> <span class=\"timestamp\">${timestamp}</span><span class=\"timestamp\">${\n      msg.edited ? \" (Edited)\" : \"\"\n    }</span></div>`;\n\n    // Message Types\n    if (msg.type === 4) {\n      html += `<div class=\"system-message\"><em>Thread renamed to “${escapeHtml(\n        msg.content\n      )}”</em></div>`;\n    } else if (msg.type === -1) {\n      html += `<div class=\"system-message\">${msg.content}</div>`;\n    } else if (msg.type === 6 && msg.replyTo && messageMap.has(msg.replyTo)) {\n      const pinned = messageMap.get(msg.replyTo)!;\n      const snippet = pinned.content\n        ? escapeHtml(\n            pinned.content.length > 50\n              ? pinned.content.slice(0, 47) + \"...\"\n              : pinned.content\n          )\n        : \"[embed/message]\";\n      html += `<div class=\"system-message\"><em>Pinned a message: <a style=\"text-decoration: none; color:#aaa;\" href=\"#msg-${pinned.messageId}\">${snippet}</a></em></div>`;\n    } else if ((msg.type === 1 || msg.type === 2) && msg.replyTo) {\n      const targetUser = users[msg.replyTo];\n      const action = msg.type === 1 ? \"Added\" : \"Removed\";\n      html += `<div class=\"system-message\"><em>${action} <span style=\"color: ${\n        targetUser?.roleColor ?? \"#ddd\"\n      }\">@${escapeHtml(\n        metadata.users?.[msg.replyTo] || targetUser?.username || \"Unknown User\"\n      )}</span></em></div>`;\n    } else {\n      // Normal message\n      if (msg.replyTo && messageMap.has(msg.replyTo)) {\n        const repliedMsg = messageMap.get(msg.replyTo)!;\n        const snippet = repliedMsg.content\n          ? escapeHtml(\n              repliedMsg.content.length > 50\n                ? repliedMsg.content.slice(0, 47) + \"...\"\n                : repliedMsg.content\n            )\n          : \"[embed/message]\";\n        html += `<div class=\"reply-snippet\">Replying to <a style=\"text-decoration: none; color:#aaa;\" href=\"#msg-${msg.replyTo}\">${snippet}</a></div>`;\n      }\n\n      html += `<div class=\"content\">${escapeHtml(msg.content)}</div>`;\n\n      // Render embeds\n      for (const embed of msg.embeds) {\n        html += renderEmbed(embed);\n      }\n    }\n\n    html += `</div>`;\n  }\n\n  html += `</div>`;\n\n  html += `<script>\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    document.querySelectorAll('a[href^=\"#msg-\"]').forEach(link => {\n      link.addEventListener(\"click\", (e) => {\n        const targetId = link.getAttribute(\"href\").slice(1);\n        const target = document.getElementById(targetId);\n        if (target) {\n          target.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n\n          target.classList.remove(\"highlight\");\n          void target.offsetWidth;\n          target.classList.add(\"highlight\");\n        }\n      });\n    });\n  });\n</script></body></html>`;\n\n  return minifyHtml(replaceMentions(html, metadata, users));\n}\n\nfunction minifyHtml(html: string): string {\n  // Remove newlines and tabs\n  let minified = html.replace(/[\\n\\r\\t]+/g, \"\") ?? \"\";\n\n  // Collapse multiple spaces into one, except inside tags (attribute values, text nodes)\n  // We do this by splitting text inside and outside tags and minifying only outside tags\n\n  // Regex to split by tags: matches tags or text\n  const parts = minified.match(/<[^>]+>|[^<]+/g);\n  if (!parts) return html;\n\n  for (let i = 0; i < parts.length; i++) {\n    if (!parts[i].startsWith(\"<\")) {\n      // Outside tag — collapse whitespace\n      parts[i] = parts[i].replace(/\\s{2,}/g, \" \");\n    } else {\n      // Inside tag — keep as is\n    }\n  }\n\n  // Join all parts without newlines or extra spaces between tags\n  return parts.join(\"\").trim();\n}\n"],"names":[],"mappings":"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","debug_id":"8e8e8127-ad37-5775-96f0-9f8202cd615b"}