{"version":3,"file":"onError.js","sources":["src/utils/onError.ts"],"sourceRoot":"/","sourcesContent":["import { APIEmbed } from \"discord.js\";\r\nimport { ErrorSchema } from \"../database/modals/Error\";\r\nimport colours from \"../constants/colours\";\r\nimport { postToWebhook } from \"./message/webhookPoster\";\r\nimport { WebhookTypes } from \"../constants/webhooks\";\r\nimport { errors } from \"../metricsServer\";\r\nimport { t } from \"../lang\";\r\nimport { Locale } from \"../types/Locale\";\r\nimport logger from \"./logger\";\r\n\r\nconst formatDiscordMessage = (\r\n  id: string,\r\n  content: string,\r\n  context?: object,\r\n  locale?: Locale\r\n) => {\r\n  const message = {\r\n    flags: [64],\r\n    content: \"\",\r\n    components: [],\r\n    embeds: [\r\n      {\r\n        color: parseInt(colours.error, 16),\r\n        title: t(locale || \"en\", \"ERROR_TITLE\"),\r\n        description: t(locale || \"en\", \"ERROR_DESCRIPTION\", {\r\n          error_message: content,\r\n          support_server: `[support server](${process.env.DISCORD_SUPPORT_INVITE})`,\r\n          error_code: id,\r\n        }),\r\n      },\r\n    ] as APIEmbed[],\r\n  };\r\n\r\n  return message;\r\n};\r\n\r\nexport const onError = async (\r\n  error: any | string,\r\n  context?: object,\r\n  locale?: Locale\r\n) => {\r\n  const errorDocument = await ErrorSchema.create({\r\n    content: error.message,\r\n    context,\r\n  });\r\n  if (typeof error === \"string\") error = new Error(error);\r\n  const id = errorDocument._id.toString();\r\n  logger.error(`Error ${id}`, error);\r\n  errors.inc({ error: error.message });\r\n\r\n  postToWebhook(WebhookTypes.ErrorLog, {\r\n    username: id,\r\n    embeds: [\r\n      {\r\n        color: parseInt(colours.error, 16),\r\n        title: `Error ${id}`,\r\n        description: `${error.message}\\n\\`\\`\\`\\n${\r\n          context ? JSON.stringify(context, null, 2) : \"No context\"\r\n        }\\n\\`\\`\\``,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return {\r\n    /**\r\n     * A message formatted so that it can be posted to Discord\r\n     */\r\n    discordMsg: formatDiscordMessage(id, error.message, context, locale),\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AACA,oDAAuD;AACvD,mEAA2C;AAC3C,2DAAwD;AACxD,oDAAqD;AACrD,oDAA0C;AAC1C,kCAA4B;AAE5B,sDAA8B;AAE9B,MAAM,oBAAoB,GAAG,CAC3B,EAAU,EACV,OAAe,EACf,OAAgB,EAChB,MAAe,EACf,EAAE;IACF,MAAM,OAAO,GAAG;QACd,KAAK,EAAE,CAAC,EAAE,CAAC;QACX,OAAO,EAAE,EAAE;QACX,UAAU,EAAE,EAAE;QACd,MAAM,EAAE;YACN;gBACE,KAAK,EAAE,QAAQ,CAAC,iBAAO,CAAC,KAAK,EAAE,EAAE,CAAC;gBAClC,KAAK,EAAE,IAAA,QAAC,EAAC,MAAM,IAAI,IAAI,EAAE,aAAa,CAAC;gBACvC,WAAW,EAAE,IAAA,QAAC,EAAC,MAAM,IAAI,IAAI,EAAE,mBAAmB,EAAE;oBAClD,aAAa,EAAE,OAAO;oBACtB,cAAc,EAAE,oBAAoB,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG;oBACzE,UAAU,EAAE,EAAE;iBACf,CAAC;aACH;SACY;KAChB,CAAC;IAEF,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEK,MAAM,OAAO,GAAG,KAAK,EAC1B,KAAmB,EACnB,OAAgB,EAChB,MAAe,EACf,EAAE;IACF,MAAM,aAAa,GAAG,MAAM,mBAAW,CAAC,MAAM,CAAC;QAC7C,OAAO,EAAE,KAAK,CAAC,OAAO;QACtB,OAAO;KACR,CAAC,CAAC;IACH,IAAI,OAAO,KAAK,KAAK,QAAQ;QAAE,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IACxD,MAAM,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IACxC,gBAAM,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IACnC,sBAAM,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAErC,IAAA,6BAAa,EAAC,uBAAY,CAAC,QAAQ,EAAE;QACnC,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE;YACN;gBACE,KAAK,EAAE,QAAQ,CAAC,iBAAO,CAAC,KAAK,EAAE,EAAE,CAAC;gBAClC,KAAK,EAAE,SAAS,EAAE,EAAE;gBACpB,WAAW,EAAE,GAAG,KAAK,CAAC,OAAO,aAC3B,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,YAC/C,UAAU;aACX;SACF;KACF,CAAC,CAAC;IAEH,OAAO;QACL;;WAEG;QACH,UAAU,EAAE,oBAAoB,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;KACrE,CAAC;AACJ,CAAC,CAAC;AAjCW,QAAA,OAAO,WAiClB","debug_id":"8b54f726-1eae-52e0-bc8d-10576cc7bc9f"}