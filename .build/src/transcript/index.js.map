{"version":3,"file":"index.js","sources":["src/transcript/index.tsx"],"sourceRoot":"/","sourcesContent":["// transcriptRenderer.tsx\nimport React from \"react\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport fs from \"fs/promises\";\nimport readline from \"readline\";\n\nexport interface SerializedMessage {\n  messageId: string;\n  userId: string;\n  type: number;\n  content: string;\n  embeds: APIEmbed[];\n  replyTo?: string;\n  edited: boolean;\n  timestamp: string;\n}\n\nexport interface APIEmbed {\n  title?: string;\n  description?: string;\n  url?: string;\n  color?: number;\n  fields?: { name: string; value: string; inline?: boolean }[];\n  footer?: { text: string; icon_url?: string };\n  image?: { url: string };\n  thumbnail?: { url: string };\n  author?: { name: string; icon_url?: string; url?: string };\n}\n\nexport interface UserMetadata {\n  username: string;\n  avatarUrl?: string;\n  isBot?: boolean;\n  color?: string;\n}\n\ninterface TranscriptProps {\n  messages: SerializedMessage[];\n  users: Record<string, UserMetadata>;\n  messageMap: Map<string, SerializedMessage>;\n}\n\nconst Transcript: React.FC<TranscriptProps> = ({\n  messages,\n  users,\n  messageMap,\n}) => (\n  <div className=\"transcript\">\n    {messages.map((msg) => (\n      <Message\n        key={msg.messageId}\n        msg={msg}\n        users={users}\n        messageMap={messageMap}\n      />\n    ))}\n  </div>\n);\n\nconst Message: React.FC<{\n  msg: SerializedMessage;\n  users: Record<string, UserMetadata>;\n  messageMap: Map<string, SerializedMessage>;\n}> = ({ msg, users, messageMap }) => {\n  const user = users[msg.userId];\n  const isSystem = msg.type !== 0 && msg.type !== 19;\n\n  return (\n    <div className={`message ${isSystem ? \"system\" : \"user\"}`}>\n      {!isSystem && (\n        <div className=\"author\">\n          {user.avatarUrl && (\n            <img className=\"avatar\" src={user.avatarUrl} alt=\"avatar\" />\n          )}\n          <span className=\"username\" style={{ color: user.color || \"#fff\" }}>\n            {user.username}\n          </span>\n          {user.isBot && <span className=\"badge\">BOT</span>}\n          <span className=\"timestamp\">\n            {new Date(msg.timestamp).toLocaleString()}\n          </span>\n        </div>\n      )}\n      {msg.replyTo && messageMap.has(msg.replyTo) && (\n        <Reply replyTo={messageMap.get(msg.replyTo)!} users={users} />\n      )}\n      <div className=\"content\">{renderContent(msg.content)}</div>\n      {msg.embeds.map((embed, idx) => (\n        <Embed key={idx} embed={embed} />\n      ))}\n      {isSystem && <div className=\"system-message\">{msg.content}</div>}\n    </div>\n  );\n};\n\nconst Reply: React.FC<{\n  replyTo: SerializedMessage;\n  users: Record<string, UserMetadata>;\n}> = ({ replyTo, users }) => {\n  const user = users[replyTo.userId];\n  return (\n    <div className=\"reply\">\n      <span className=\"reply-user\">Replying to {user.username}</span>\n      <div className=\"reply-content\">{replyTo.content}</div>\n    </div>\n  );\n};\n\nconst Embed: React.FC<{ embed: APIEmbed }> = ({ embed }) => (\n  <div\n    className=\"embed\"\n    style={{\n      borderLeft: `4px solid #${embed.color?.toString(16) || \"7289da\"}`,\n    }}\n  >\n    {embed.author && (\n      <div className=\"embed-author\">\n        {embed.author.icon_url && (\n          <img\n            src={embed.author.icon_url}\n            alt=\"author icon\"\n            className=\"embed-author-icon\"\n          />\n        )}\n        <span className=\"embed-author-name\">{embed.author.name}</span>\n      </div>\n    )}\n    {embed.title && <div className=\"embed-title\">{embed.title}</div>}\n    {embed.description && (\n      <div className=\"embed-description\">{embed.description}</div>\n    )}\n    {embed.fields &&\n      embed.fields.map((f, i) => (\n        <div className=\"embed-field\" key={i}>\n          <div className=\"embed-field-name\">{f.name}</div>\n          <div className=\"embed-field-value\">{f.value}</div>\n        </div>\n      ))}\n    {embed.image && (\n      <img className=\"embed-image\" src={embed.image.url} alt=\"embed\" />\n    )}\n    {embed.footer && <div className=\"embed-footer\">{embed.footer.text}</div>}\n  </div>\n);\n\nconst renderContent = (content: string): React.ReactNode => {\n  // Handle custom emojis like <:name:id> or <a:name:id>\n  const emojiRegex = /<(a?):(\\w+):(\\d+)>/g;\n  const parts: React.ReactNode[] = [];\n  let lastIndex = 0;\n\n  for (const match of content.matchAll(emojiRegex)) {\n    const [full, animated, name, id] = match;\n    const index = match.index ?? 0;\n    if (index > lastIndex) parts.push(content.slice(lastIndex, index));\n    const ext = animated ? \"gif\" : \"png\";\n    parts.push(\n      <img\n        className=\"emoji\"\n        src={`https://cdn.discordapp.com/emojis/${id}.${ext}`}\n        alt={name}\n      />\n    );\n    lastIndex = index + full.length;\n  }\n\n  if (lastIndex < content.length) parts.push(content.slice(lastIndex));\n  return parts;\n};\n\nexport async function renderTranscriptFromJsonl(\n  jsonlFilePath: string,\n  users: Record<string, UserMetadata>,\n  metadata: {\n    name?: string;\n    users?: Record<string, string>;\n    channels?: Record<string, string>;\n    roles?: Record<string, string>;\n  }\n): Promise<string> {\n  const messages: SerializedMessage[] = [];\n  const fileStream = await fs.open(jsonlFilePath);\n  const rl = readline.createInterface({\n    input: fileStream.createReadStream(),\n    crlfDelay: Infinity,\n  });\n\n  for await (const line of rl) {\n    if (line.trim()) {\n      try {\n        messages.push(JSON.parse(line));\n      } catch (e) {\n        console.error(\"Invalid JSON line:\", line);\n      }\n    }\n  }\n\n  const messageMap = new Map(messages.map((m) => [m.messageId, m]));\n  const html = renderToStaticMarkup(\n    <html>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <title>{metadata.name || \"Discord Transcript\"}</title>\n        <style>{`\n          body { font-family: sans-serif; background: #36393f; color: white; padding: 20px; }\n          .message { margin-bottom: 16px; }\n          .author { display: flex; align-items: center; gap: 8px; }\n          .avatar { width: 32px; height: 32px; border-radius: 50%; }\n          .username { font-weight: bold; }\n          .timestamp { color: #aaa; font-size: 12px; margin-left: auto; }\n          .badge { background: #5865f2; color: white; font-size: 10px; padding: 2px 4px; border-radius: 3px; margin-left: 4px; }\n          .content { margin-top: 4px; white-space: pre-wrap; }\n          .reply { margin-left: 40px; background: #2f3136; padding: 4px 8px; border-left: 2px solid #5865f2; }\n          .embed { background: #2f3136; padding: 8px; margin-top: 4px; border-radius: 4px; }\n          .embed-author { display: flex; align-items: center; gap: 6px; font-weight: bold; }\n          .embed-author-icon { width: 20px; height: 20px; border-radius: 50%; }\n          .embed-title { font-weight: bold; margin-top: 4px; }\n          .embed-description { margin-top: 4px; }\n          .embed-field { margin-top: 4px; }\n          .embed-field-name { font-weight: bold; }\n          .embed-image { max-width: 100%; margin-top: 6px; border-radius: 3px; }\n          .embed-footer { margin-top: 4px; font-size: 12px; color: #aaa; }\n          .emoji { width: 20px; height: 20px; vertical-align: middle; }\n          .system-message { color: #faa61a; font-style: italic; margin-top: 4px; }\n        `}</style>\n      </head>\n      <body>\n        <Transcript messages={messages} users={users} messageMap={messageMap} />\n      </body>\n    </html>\n  );\n\n  return \"<!DOCTYPE html>\" + html;\n}\n"],"names":[],"mappings":"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","debug_id":"c4bca06f-deac-5573-833b-637d39026d4b"}