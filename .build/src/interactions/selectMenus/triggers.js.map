{"version":3,"file":"triggers.js","sources":["src/interactions/selectMenus/triggers.ts"],"sourceRoot":"/","sourcesContent":["import { GuildMember, MessageFlags, ModalSubmitInteraction } from \"discord.js\";\nimport { t } from \"../../lang\";\nimport { SelectMenuHandler } from \"../../types/Interactions\";\nimport {\n  TicketForm,\n  TicketFormResponse,\n  TicketTrigger,\n} from \"../../types/Ticket\";\nimport {\n  getServerApplication,\n  getServerTicketTrigger,\n} from \"../../utils/bot/getServer\";\nimport { onError } from \"../../utils/onError\";\nimport {\n  canCreateTicketTarget,\n  performTicketChecks,\n} from \"../../utils/tickets/performChecks\";\nimport { runHooks } from \"../../utils/hooks\";\nimport { ticketQueueManager } from \"../..\";\nimport { buildTicketFormModal } from \"../../utils/tickets/buildFormModal\";\nimport { performApplicationChecks } from \"../../utils/applications/performChecks\";\nimport { Application } from \"../../types/Application\";\n\nconst modal: SelectMenuHandler = {\n  customId: \"ticket\",\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n\n    if (interaction.values[0].split(\":\")[0] === \"apply\") {\n      const [, applicationId] = interaction.values[0].split(\":\");\n      await interaction.reply({\n        content: t(data.lang!, \"APPLICATION_PENDING_CHECKS\"),\n        flags: [MessageFlags.Ephemeral],\n      });\n\n      const application = await getServerApplication(\n        applicationId,\n        interaction.guildId\n      );\n      if (!application)\n        return interaction.editReply(\n          (await onError(new Error(\"Application not found\"))).discordMsg\n        );\n\n      const appObject = application.toObject();\n      const applicationTyped: Application = {\n        ...appObject,\n        open: appObject.open?.toISOString() ?? null,\n        close: appObject.close?.toISOString() ?? null,\n        acceptedMessage: appObject.acceptedMessage ?? null,\n        rejectedMessage: appObject.rejectedMessage ?? null,\n        submissionMessage: appObject.submissionMessage ?? null,\n        cancelMessage: appObject.cancelMessage ?? null,\n        confirmationMessage: appObject.confirmationMessage ?? null,\n      };\n\n      const checks = await performApplicationChecks(\n        applicationTyped,\n        interaction.member as GuildMember,\n        true\n      );\n\n      if (!checks.allowed) {\n        return interaction.editReply(\n          (\n            await onError(\n              new Error(t(data.lang!, `ERROR_CODE_${checks.error}`))\n            )\n          ).discordMsg\n        );\n      }\n\n      interaction.editReply({\n        content: t(data.lang!, \"APPLICATION_DIRECT_TO_DMS\"),\n      });\n\n      runHooks(\"ApplicationStart\", {\n        lang: data.lang!,\n        user: interaction.user,\n        application: applicationTyped,\n        server: interaction.guild!,\n      });\n    } else {\n      const [, triggerId] = interaction.values[0].split(\":\");\n\n      const trigger = await getServerTicketTrigger(\n        triggerId,\n        interaction.guildId\n      );\n      if (!trigger)\n        return interaction.reply(\n          (await onError(new Error(\"Trigger not found\"))).discordMsg\n        );\n\n      const triggerObject = trigger.toObject();\n      const triggerTyped: TicketTrigger = {\n        ...triggerObject,\n      };\n\n      if (trigger.form.length) {\n        const modal = buildTicketFormModal(\n          triggerTyped.form,\n          `ticket:${trigger._id}`,\n          triggerTyped.label\n        );\n\n        if (modal instanceof Error)\n          return await interaction.reply({\n            ...(\n              await onError(new Error(modal.message), { stack: modal.stack })\n            ).discordMsg,\n            flags: [MessageFlags.Ephemeral],\n          });\n\n        return await interaction.showModal(modal);\n      }\n\n      await interaction.reply({\n        content: t(data.lang!, \"TICKET_CREATE_PERFORMING_CHECKS\"),\n        flags: [MessageFlags.Ephemeral],\n      });\n\n      let responses: TicketFormResponse[] = [];\n\n      ticketQueueManager.wrap(async () => {\n        const checks = await performTicketChecks(\n          triggerTyped,\n          interaction.member as GuildMember\n        );\n\n        if (!checks.allowed) {\n          return interaction.editReply(\n            (\n              await onError(\n                new Error(t(data.lang!, `ERROR_CODE_${checks.error}`))\n              )\n            ).discordMsg\n          );\n        }\n\n        const checkTargetChannel = await canCreateTicketTarget(\n          interaction.guild!,\n          trigger.isThread ? \"thread\" : \"channel\",\n          trigger.openChannel || interaction.channelId\n        );\n        if (!checkTargetChannel.allowed)\n          return interaction.editReply(\n            (\n              await onError(\n                new Error(\n                  t(data.lang!, `ERROR_CODE_${checkTargetChannel.error}`)\n                )\n              )\n            ).discordMsg\n          );\n\n        await interaction.editReply({\n          content: t(data.lang!, \"TICKET_CREATE_CHECKS_PASSED\"),\n        });\n\n        await runHooks(\"TicketCreate\", {\n          client: client,\n          guild: interaction.guild!,\n          lang: data.lang!,\n          messageOrInteraction: interaction,\n          owner: interaction.user.id,\n          responses: responses,\n          trigger: triggerTyped,\n          user: interaction.user,\n        });\n      }, interaction.guildId);\n    }\n  },\n};\n\nexport default modal;\n\nexport function parseTicketFormModalResponse(\n  interaction: ModalSubmitInteraction,\n  form: TicketForm[]\n): TicketFormResponse[] {\n  const responses: TicketFormResponse[] = [];\n\n  for (let i = 0; i < form.length; i++) {\n    const question = form[i].question;\n    const customId = `form_${i}`;\n\n    const value = interaction.fields.getTextInputValue(customId);\n    responses.push({\n      question,\n      response: value,\n    });\n  }\n\n  return responses;\n}\n"],"names":[],"mappings":"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","debug_id":"457e42e7-ac00-54da-94fe-e84509dc6363"}