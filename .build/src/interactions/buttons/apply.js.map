{"version":3,"file":"apply.js","sources":["src/interactions/buttons/apply.ts"],"sourceRoot":"/","sourcesContent":["import { GuildMember, MessageFlags } from \"discord.js\";\nimport { t } from \"../../lang\";\nimport { ButtonHandler } from \"../../types/Interactions\";\nimport { getServerApplication } from \"../../utils/bot/getServer\";\nimport { onError } from \"../../utils/onError\";\nimport { performApplicationChecks } from \"../../utils/applications/performChecks\";\nimport { Application } from \"../../types/Application\";\nimport { runHooks } from \"../../utils/hooks\";\n\nconst button: ButtonHandler = {\n  customId: \"apply\",\n  async execute(client, data, interaction) {\n    if (!interaction.guildId) return;\n    const [, applicationId] = interaction.customId.split(\":\");\n    await interaction.reply({\n      content: t(data.lang!, \"APPLICATION_PENDING_CHECKS\"),\n      flags: [MessageFlags.Ephemeral],\n    });\n\n    const application = await getServerApplication(\n      applicationId,\n      interaction.guildId\n    );\n    if (!application)\n      return interaction.editReply(\n        (await onError(new Error(\"Application not found\"))).discordMsg\n      );\n\n    const appObject = application.toObject();\n    const applicationTyped: Application = {\n      ...appObject,\n      open: appObject.open?.toISOString() ?? null,\n      close: appObject.close?.toISOString() ?? null,\n      acceptedMessage: appObject.acceptedMessage ?? null,\n      rejectedMessage: appObject.rejectedMessage ?? null,\n      submissionMessage: appObject.submissionMessage ?? null,\n      cancelMessage: appObject.cancelMessage ?? null,\n      confirmationMessage: appObject.confirmationMessage ?? null,\n    };\n\n    const checks = await performApplicationChecks(\n      applicationTyped,\n      interaction.member as GuildMember,\n      true\n    );\n\n    if (!checks.allowed) {\n      return interaction.editReply(\n        (await onError(new Error(t(data.lang!, `ERROR_CODE_${checks.error}`))))\n          .discordMsg\n      );\n    }\n\n    interaction.editReply({\n      content: t(data.lang!, \"APPLICATION_DIRECT_TO_DMS\"),\n    });\n\n    runHooks(\"ApplicationStart\", {\n      lang: data.lang!,\n      user: interaction.user,\n      application: applicationTyped,\n      server: interaction.guild!,\n    });\n  },\n};\n\nexport default button;\n"],"names":[],"mappings":";;;;AAAA,2CAAuD;AACvD,qCAA+B;AAE/B,yDAAiE;AACjE,iDAA8C;AAC9C,0EAAkF;AAElF,6CAA6C;AAE7C,MAAM,MAAM,GAAkB;IAC5B,QAAQ,EAAE,OAAO;IACjB,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW;QACrC,IAAI,CAAC,WAAW,CAAC,OAAO;YAAE,OAAO;QACjC,MAAM,CAAC,EAAE,aAAa,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC1D,MAAM,WAAW,CAAC,KAAK,CAAC;YACtB,OAAO,EAAE,IAAA,QAAC,EAAC,IAAI,CAAC,IAAK,EAAE,4BAA4B,CAAC;YACpD,KAAK,EAAE,CAAC,yBAAY,CAAC,SAAS,CAAC;SAChC,CAAC,CAAC;QAEH,MAAM,WAAW,GAAG,MAAM,IAAA,gCAAoB,EAC5C,aAAa,EACb,WAAW,CAAC,OAAO,CACpB,CAAC;QACF,IAAI,CAAC,WAAW;YACd,OAAO,WAAW,CAAC,SAAS,CAC1B,CAAC,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,UAAU,CAC/D,CAAC;QAEJ,MAAM,SAAS,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;QACzC,MAAM,gBAAgB,GAAgB;YACpC,GAAG,SAAS;YACZ,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,IAAI;YAC3C,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,IAAI;YAC7C,eAAe,EAAE,SAAS,CAAC,eAAe,IAAI,IAAI;YAClD,eAAe,EAAE,SAAS,CAAC,eAAe,IAAI,IAAI;YAClD,iBAAiB,EAAE,SAAS,CAAC,iBAAiB,IAAI,IAAI;YACtD,aAAa,EAAE,SAAS,CAAC,aAAa,IAAI,IAAI;YAC9C,mBAAmB,EAAE,SAAS,CAAC,mBAAmB,IAAI,IAAI;SAC3D,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,IAAA,wCAAwB,EAC3C,gBAAgB,EAChB,WAAW,CAAC,MAAqB,EACjC,IAAI,CACL,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO,WAAW,CAAC,SAAS,CAC1B,CAAC,MAAM,IAAA,iBAAO,EAAC,IAAI,KAAK,CAAC,IAAA,QAAC,EAAC,IAAI,CAAC,IAAK,EAAE,cAAc,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;iBACpE,UAAU,CACd,CAAC;QACJ,CAAC;QAED,WAAW,CAAC,SAAS,CAAC;YACpB,OAAO,EAAE,IAAA,QAAC,EAAC,IAAI,CAAC,IAAK,EAAE,2BAA2B,CAAC;SACpD,CAAC,CAAC;QAEH,IAAA,gBAAQ,EAAC,kBAAkB,EAAE;YAC3B,IAAI,EAAE,IAAI,CAAC,IAAK;YAChB,IAAI,EAAE,WAAW,CAAC,IAAI;YACtB,WAAW,EAAE,gBAAgB;YAC7B,MAAM,EAAE,WAAW,CAAC,KAAM;SAC3B,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,kBAAe,MAAM,CAAC","debug_id":"52ab8e0f-fbb2-5fd7-ae3e-c0a52f941dd3"}