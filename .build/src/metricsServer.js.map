{"version":3,"file":"metricsServer.js","sources":["src/metricsServer.ts"],"sourceRoot":"/","sourcesContent":["import express, { NextFunction, Request, Response } from \"express\";\r\nimport rateLimit from \"express-rate-limit\";\r\nimport { collectDefaultMetrics, Registry, Gauge, Counter } from \"prom-client\";\r\nimport logger from \"./utils/logger\";\r\n\r\nfunction authMiddleware(req: Request, res: Response, next: NextFunction) {\r\n  const authHeader = req.headers[\"authorization\"];\r\n  const token = authHeader?.split(\" \")[1];\r\n\r\n  if (!token || token !== process.env[\"API_TOKEN\"]) {\r\n    res.status(401).json({ error: \"Unauthorized\" });\r\n    return;\r\n  }\r\n\r\n  next();\r\n}\r\n\r\nconst app = express();\r\nconst registry = new Registry();\r\n\r\n// Auth middleware\r\napp.use(authMiddleware);\r\n\r\n// Register default metrics\r\ncollectDefaultMetrics({ register: registry });\r\n\r\n// Database metrics\r\nexport const cacheHits = new Gauge({\r\n  name: \"database_cache_hits\",\r\n  help: \"Number of cache hits when requesting from the database\",\r\n});\r\n\r\nexport const cacheMisses = new Gauge({\r\n  name: \"database_cache_misses\",\r\n  help: \"Number of cache misses when requesting from the database\",\r\n});\r\n\r\nexport const databaseRequests = new Gauge({\r\n  name: \"database_requests\",\r\n  help: \"Number of times data has been requested from the database\",\r\n});\r\n\r\nregistry.registerMetric(cacheHits);\r\nregistry.registerMetric(cacheMisses);\r\nregistry.registerMetric(databaseRequests);\r\n\r\n// Generic error metrics\r\nexport const errors = new Counter({\r\n  name: \"errors\",\r\n  help: \"Generic error tracking\",\r\n  labelNames: [\"location\", \"error\"] as const,\r\n});\r\n\r\nregistry.registerMetric(errors);\r\n\r\n// Command metrics\r\nexport const commandsRun = new Counter({\r\n  name: \"commands_run\",\r\n  help: \"The number of commands that have been run\",\r\n  labelNames: [\"command\", \"type\"] as const,\r\n});\r\n\r\nexport const commandErrors = new Counter({\r\n  name: \"commands_errored\",\r\n  help: \"The number of commands that have errored out\",\r\n  labelNames: [\"command\", \"type\", \"cause\"] as const,\r\n});\r\n\r\nregistry.registerMetric(commandsRun);\r\nregistry.registerMetric(commandErrors);\r\n\r\n// Interactions\r\nexport const interactionsRun = new Counter({\r\n  name: \"interactions_run\",\r\n  help: \"The number of interactions that have run\",\r\n  labelNames: [\"type\", \"name\"] as const,\r\n});\r\n\r\nexport const interactionErrors = new Counter({\r\n  name: \"interactions_errored\",\r\n  help: \"The number of interactions that have errored\",\r\n  labelNames: [\"type\", \"name\"] as const,\r\n});\r\n\r\nregistry.registerMetric(interactionsRun);\r\nregistry.registerMetric(interactionErrors);\r\n\r\n// Ticketing analytics\r\nexport const tickets = new Counter({\r\n  name: \"tickets\",\r\n  help: \"Ticket information\",\r\n  labelNames: [\"action\", \"origin\"] as const,\r\n});\r\n\r\nregistry.registerMetric(tickets);\r\n\r\n// Rate limiter middleware for Prometheus endpoint\r\nconst metricsLimiter = rateLimit({\r\n  windowMs: 60 * 1000, // 1 minute\r\n  max: 5, // 5 requests per minute per IP\r\n  standardHeaders: true,\r\n  legacyHeaders: false,\r\n});\r\n\r\n// Exportable function to start the metrics server\r\nexport function startMetricsServer(port: number) {\r\n  app.get(\r\n    `/${process.env[\"METRICS_URL\"]}`,\r\n    metricsLimiter,\r\n    async (req: Request, res: Response) => {\r\n      res.setHeader(\"Content-Type\", registry.contentType);\r\n      res.end(await registry.metrics());\r\n    }\r\n  );\r\n\r\n  app.listen(port, () => {\r\n    logger.info(\r\n      `Metrics server running at http://localhost:${port}/${process.env[\"METRICS_URL\"]}`\r\n    );\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAyGA,gDAeC;AAxHD,sDAAmE;AACnE,4EAA2C;AAC3C,6CAA8E;AAC9E,4DAAoC;AAEpC,SAAS,cAAc,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;IACrE,MAAM,UAAU,GAAG,GAAG,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAChD,MAAM,KAAK,GAAG,UAAU,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAExC,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE,CAAC;QACjD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC,CAAC;QAChD,OAAO;IACT,CAAC;IAED,IAAI,EAAE,CAAC;AACT,CAAC;AAED,MAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;AACtB,MAAM,QAAQ,GAAG,IAAI,sBAAQ,EAAE,CAAC;AAEhC,kBAAkB;AAClB,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;AAExB,2BAA2B;AAC3B,IAAA,mCAAqB,EAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;AAE9C,mBAAmB;AACN,QAAA,SAAS,GAAG,IAAI,mBAAK,CAAC;IACjC,IAAI,EAAE,qBAAqB;IAC3B,IAAI,EAAE,wDAAwD;CAC/D,CAAC,CAAC;AAEU,QAAA,WAAW,GAAG,IAAI,mBAAK,CAAC;IACnC,IAAI,EAAE,uBAAuB;IAC7B,IAAI,EAAE,0DAA0D;CACjE,CAAC,CAAC;AAEU,QAAA,gBAAgB,GAAG,IAAI,mBAAK,CAAC;IACxC,IAAI,EAAE,mBAAmB;IACzB,IAAI,EAAE,2DAA2D;CAClE,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CAAC,iBAAS,CAAC,CAAC;AACnC,QAAQ,CAAC,cAAc,CAAC,mBAAW,CAAC,CAAC;AACrC,QAAQ,CAAC,cAAc,CAAC,wBAAgB,CAAC,CAAC;AAE1C,wBAAwB;AACX,QAAA,MAAM,GAAG,IAAI,qBAAO,CAAC;IAChC,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,wBAAwB;IAC9B,UAAU,EAAE,CAAC,UAAU,EAAE,OAAO,CAAU;CAC3C,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CAAC,cAAM,CAAC,CAAC;AAEhC,kBAAkB;AACL,QAAA,WAAW,GAAG,IAAI,qBAAO,CAAC;IACrC,IAAI,EAAE,cAAc;IACpB,IAAI,EAAE,2CAA2C;IACjD,UAAU,EAAE,CAAC,SAAS,EAAE,MAAM,CAAU;CACzC,CAAC,CAAC;AAEU,QAAA,aAAa,GAAG,IAAI,qBAAO,CAAC;IACvC,IAAI,EAAE,kBAAkB;IACxB,IAAI,EAAE,8CAA8C;IACpD,UAAU,EAAE,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO,CAAU;CAClD,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CAAC,mBAAW,CAAC,CAAC;AACrC,QAAQ,CAAC,cAAc,CAAC,qBAAa,CAAC,CAAC;AAEvC,eAAe;AACF,QAAA,eAAe,GAAG,IAAI,qBAAO,CAAC;IACzC,IAAI,EAAE,kBAAkB;IACxB,IAAI,EAAE,0CAA0C;IAChD,UAAU,EAAE,CAAC,MAAM,EAAE,MAAM,CAAU;CACtC,CAAC,CAAC;AAEU,QAAA,iBAAiB,GAAG,IAAI,qBAAO,CAAC;IAC3C,IAAI,EAAE,sBAAsB;IAC5B,IAAI,EAAE,8CAA8C;IACpD,UAAU,EAAE,CAAC,MAAM,EAAE,MAAM,CAAU;CACtC,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CAAC,uBAAe,CAAC,CAAC;AACzC,QAAQ,CAAC,cAAc,CAAC,yBAAiB,CAAC,CAAC;AAE3C,sBAAsB;AACT,QAAA,OAAO,GAAG,IAAI,qBAAO,CAAC;IACjC,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,oBAAoB;IAC1B,UAAU,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAU;CAC1C,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,CAAC,eAAO,CAAC,CAAC;AAEjC,kDAAkD;AAClD,MAAM,cAAc,GAAG,IAAA,4BAAS,EAAC;IAC/B,QAAQ,EAAE,EAAE,GAAG,IAAI,EAAE,WAAW;IAChC,GAAG,EAAE,CAAC,EAAE,+BAA+B;IACvC,eAAe,EAAE,IAAI;IACrB,aAAa,EAAE,KAAK;CACrB,CAAC,CAAC;AAEH,kDAAkD;AAClD,SAAgB,kBAAkB,CAAC,IAAY;IAC7C,GAAG,CAAC,GAAG,CACL,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,EAChC,cAAc,EACd,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;QACpC,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;QACpD,GAAG,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;IACpC,CAAC,CACF,CAAC;IAEF,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;QACpB,gBAAM,CAAC,IAAI,CACT,8CAA8C,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CACnF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","debug_id":"65a11bd3-40f2-5063-8329-d5cdffbd2271"}